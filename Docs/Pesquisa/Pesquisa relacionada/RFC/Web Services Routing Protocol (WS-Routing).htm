<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0048)http://msdn.microsoft.com/en-us/library/ms951249 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>
	
  Web Services Routing Protocol (WS-Routing)

</title><link href="./Web Services Routing Protocol (WS-Routing)_files/064bc0ac7f2dacac51404ce41f8aa35b.css" rel="stylesheet" type="text/css"><link rel="alternate" media="print" href="http://msdn.microsoft.com/en-us/library/ms951249(d=printer)"><meta name="DCS.dcsuri" content="/en-us/library/ms951249(d=lightweight,l=en-us,v=MSDN.10).aspx"><meta name="NormalizedUrl" content="http://msdn.microsoft.com/en-us/library/ms951249(d=lightweight,l=en-us,v=MSDN.10).aspx"><meta name="VotingContextUrl" content="http://msdn.microsoft.com/en-us/library/ms951249(l=en-us,v=MSDN.10).aspx"><meta name="MN" content="74838609-11:12:43 AM"><meta name="Search.ShortId" content="ms951249"><meta name="Ms.Locale" content="en-us"></head><body><div class="header"><table border="0" cellpadding="0" cellspacing="0" class="headerBar cl_lightweight_topnav_slice"><tbody><tr><td class="leftSection cl_lightweight_header_leftSection_wave leftSectionImageClusterOverride"><div class="tabContainer"><a href="http://msdn.microsoft.com/en-us/" title="Home" class=" headerTab">Home</a><a href="http://msdn.microsoft.com/en-us/library" title="Library" class="headerTabSelected cl_lightweight_selected_tab_repeatX ">Library</a><a href="http://msdn.microsoft.com/en-us/bb188199.aspx" title="Learn" class=" headerTab">Learn</a><a href="http://msdn.microsoft.com/en-us/aa570309.aspx" title="Downloads" class=" headerTab">Downloads</a><a href="http://msdn.microsoft.com/en-us/aa570318.aspx" title="Support" class=" headerTab">Support</a><a href="http://msdn.microsoft.com/en-us/aa497440.aspx" title="Community" class=" headerTab">Community</a></div></td><td class="rightSection cl_lightweight_header_rightSection_wave rightSectionImageClusterOverride"><div class="tabContainer"><a href="http://login.live.com/login.srf?wa=wsignin1.0&rpsnv=11&ct=1284747163&rver=6.0.5276.0&wp=MCLBI&wlcxt=msdn%24msdn%24msdn&wreply=http:%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Fms951249&lc=1033&cb=&id=254354" title="Sign in">Sign in </a><span class="pipe">|</span><a href="http://msdn.microsoft.com/en-us/library/preferences/locale/?returnurl=%252fen-us%252flibrary%252fms951249" title="United States - English">United States - English </a><span class="pipe">|</span><a href="http://msdn.microsoft.com/en-us/library/preferences/experience/?returnurl=%252fen-us%252flibrary%252fms951249" title="Preferences">Preferences</a></div></td></tr></tbody></table></div><div class="contentPlaceHolder"><div class="navigation" id="Navigation" style="width:280px"><div class="searchcontainer"><form id="SearchForm" action="http://social.msdn.microsoft.com/Search/en-us" method="get" style="margin: 0; padding: 0;"><div class="searchBoxContainer" style=""><table class="searchBox" cellpadding="0" cellspacing="0" border="0"><tbody><tr><td><img src="./Web Services Routing Protocol (WS-Routing)_files/030c41d9079671d09a62d8e2c1db6973.gif" class="cl_lt_search" alt=""></td><td class="searchTextBoxTd cl_slice_Search"><input id="Text1" type="text" maxlength="200" class="searchTextBox" name="query" value="Search MSDN with Bing" onfocus="document.onkeydown = &#39;&#39;; WatermarkFocus(this, &#39;Search MSDN with Bing&#39;, &#39;searchTextBoxTrue&#39;) " onblur="document.onkeydown = Presskey;WatermarkBlur(this, &#39;Search MSDN with Bing&#39;, &#39;searchTextBox&#39;)"></td><td class="searchButtonTd cl_slice_Search"><a href="http://msdn.microsoft.com/en-us/library/ms951249#" style="display: block; overflow: hidden; width: 19px; height: 19px; position: relative;           padding: 0; margin: 0;" onclick="javascript:document.getElementById(&#39;SearchForm&#39;).submit();"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_search_icon" style="position: relative;" title="Search" alt="Search"></a></td><td><img src="./Web Services Routing Protocol (WS-Routing)_files/030c41d9079671d09a62d8e2c1db6973.gif" class="cl_rt_search" alt=""></td></tr></tbody></table></div></form></div><div class="navcontainer"><div class="nav"><div class="toclevel0 ancestry"><div class="clip5x9 nav_root"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_bullet" alt=""></div><div class="nav_div_currentroot"><a href="http://msdn.microsoft.com/en-us/library/ms123401.aspx" title="MSDN Library">MSDN Library</a></div></div><div class="toclevel1 children" style="border-bottom:1px solid #bbbbbb;"><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/cc295789.aspx" title="Design Tools">Design Tools</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/aa187916.aspx" title="Development Tools and Languages">Development Tools and Languages</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/ms376734.aspx" title="Mobile and Embedded Development">Mobile and Embedded Development</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/ff361664.aspx" title=".NET Development">.NET Development</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/bb726434(v=office.12).aspx" title="Office Development">Office Development</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/ee702802.aspx" title="Online Services">Online Services</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/dd208104(v=prot.10).aspx" title="Open Specifications">Open Specifications</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/ff921345.aspx" title="patterns &amp; practices">patterns &amp; practices</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/aa155072.aspx" title="Servers and Enterprise Development">Servers and Enterprise Development</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/ee721044.aspx" title="Speech Technologies">Speech Technologies</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/aa155073.aspx" title="Web Development">Web Development</a></div><div class="clip13x9 nav_dots"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_nav_dots" alt=""></div><div><a href="http://msdn.microsoft.com/en-us/library/ee663300(v=VS.85).aspx" title="Windows Development">Windows Development</a></div></div><img src="./Web Services Routing Protocol (WS-Routing)_files/030c41d9079671d09a62d8e2c1db6973.gif" alt="Separator" class="communityContentNavigationSeparator cl_lt_cc_line_top"></div></div></div><a href="http://msdn.microsoft.com/en-us/library/ms951249#" onclick="onIncreaseToc()" class="tocResize" id="TocResize" style="left:280px"><img id="ResizeImageIncrease" class="cl_nav_resize_open" src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" onmousedown="onIncreaseToc()" title="Expand" alt="Expand"><img id="ResizeImageReset" class="cl_nav_resize_close" src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" style="display:none" onmousedown="onResetToc()" title="Minimize" alt="Minimize"></a><div class="content"><div class="clip117x31 logo"><a href="http://msdn.microsoft.com/en-us/library/default.aspx"><img src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="msdn_body_logo" alt="" title=""></a></div><img src="./Web Services Routing Protocol (WS-Routing)_files/4af07a4b382aa20acda1ffb4bb75c973.png" class="TOC_Fade_Top" alt=""><div class="topicContainer"><div class="topic" xmlns:mtps="http://msdn2.microsoft.com/mtps" xmlns="http://www.w3.org/1999/xhtml"><h1 class="title">Web Services Routing Protocol (WS-Routing)</h1><a name="ws-routing"></a><div id="nstext" valign="bottom">&nbsp;
<blockquote class="dtBlock"><b>Note</b>&nbsp;&nbsp;&nbsp;This specification is superseded by <a href="http://msdn.microsoft.com/ws/2004/08/ws-addressing/">WS-Addressing</a>.</blockquote><h4 class="dtH1"><a name="ws-routing_n0190"></a>Authors</h4><blockquote class="dtBlock"><a href="mailto:henrikn@microsoft.com">Henrik Frystyk Nielsen</a><br><a href="mailto:satisht@microsoft.com">Satish Thatte</a></blockquote><h2 class="dtH1"><a name="ws-routing_n0950"></a>Copyright Notice</h2><p>© 2001 Microsoft Corporation. All rights reserved.</p><p>The presentation, distribution or other dissemination of the information contained herein by Microsoft is not a license, either expressly or impliedly, to any intellectual property owned or controlled by Microsoft.</p><p>This document and the information contained herein is provided on an "AS IS" basis and to the maximum extent permitted by applicable law, Microsoft provides the document AS IS AND WITH ALL FAULTS, and hereby disclaims all other warranties and conditions, either express, implied or statutory, including, but not limited to, any (if any) implied warranties, duties or conditions of merchantability, of fitness for a particular purpose, of accuracy or completeness of responses, of results, of workmanlike effort, of lack of viruses, and of lack of negligence, all with regard to the document. ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT WITH REGARD TO THE DOCUMENT.</p><p>IN NO EVENT WILL MICROSOFT BE LIABLE TO ANY OTHER PARTY FOR THE COST OF PROCURING SUBSTITUTE GOODS OR SERVICES, LOST PROFITS, LOSS OF USE, LOSS OF DATA, OR ANY INCIDENTAL, CONSEQUENTIAL, DIRECT, INDIRECT, OR SPECIAL DAMAGES WHETHER UNDER CONTRACT, TORT, WARRANTY, OR OTHERWISE, ARISING IN ANY WAY OUT OF THIS OR ANY OTHER AGREEMENT RELATING TO THIS DOCUMENT, WHETHER OR NOT SUCH PARTY HAD ADVANCE NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.</p><h2 class="dtH1"><a name="ws-routing_n0000"></a>Abstract</h2><p>Web Services Routing Protocol (WS-Routing) is a SOAP-based, stateless protocol for exchanging one-way SOAP messages from an initial sender to the ultimate receiver, potentially via a set of intermediaries. In addition, WS-Routing provides an optional reverse message path enabling two-way message exchange patterns like request/response, peer-to-peer conversations, and the return of message acknowledgements and faults. WS-Routing is expressed as a SOAP header entry within a SOAP envelope making it relatively independent of the underlying protocol. This specification defines the use of WS-Routing in combination with TCP, UDP, and HTTP but other underlying protocols are possible.</p><h2 class="dtH1"><a name="ws-routing_n0960"></a>Status</h2><p>WS-Routing and related specifications are provided as-is and for review and evaluation only. Microsoft hopes to solicit your contributions and suggestions in the near future. Microsoft Corporation makes no warrantees or representations regarding the specifications in any manner whatsoever.</p><h2 class="dtH1"><a name="ws-routing_n0010"></a>Table of Contents</h2><p>1. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0100">Introduction</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;1.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0110">Purpose</a><br>
2. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0200">Notational Conventions</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0210">Compliance</a><br>
3. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0300">The WS-Routing Model</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0310">SOAP Message Path Model</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0320">WS-Routing Message Path Terminology</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.3 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0330">WS-Routing and the SOAP Message Path Model</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.4 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">WS-Routing Intermediaries</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.5 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0350">WS-Routing Gateways</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.6 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0360">Fan-in and Fan-out Message Path Models</a><br>
4. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0400">The WS-Routing Mechanisms</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0410">Endpoints</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0420">The Forward Message Path</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.3 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0430">The Reverse Message Path</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.4 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">Traversing the Forward Message Path</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.5 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0450">Identifying and Correlating Messages</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.6 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0460">Using the Reverse Message Path</a><br>
5. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0500">The WS-Routing Specifications</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;5.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0510">WS-Routing Header Elements</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0511">action</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0513">from</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.3 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0514">fwd</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.4 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0515">id</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.5 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0516">relatesTo</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.6 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0517">rev</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.7 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0518">to</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.8 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0519">via</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.1.8.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n05191">The vid Attribute</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;5.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">WS-Routing Fault Messages</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.2.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0521">WS-Routing Sender Faults</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.2.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0522">WS-Routing Receiver Faults</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;5.3 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0530">Use of URIs in WS-Routing</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;5.4 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0540">Timeouts</a><br>
6. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0600">The soap: URI Scheme</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;6.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0610">Equivalence Rules</a><br>
7. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0700">WS-Routing Underlying Protocol Bindings</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;7.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0750">WS-Routing and DIME</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;7.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0710">TCP</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.2.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0711">TCP Connection Management</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;7.3 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0720">UDP</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;7.4 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0730">HTTP</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.1 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0731">HTTP Request</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.2 <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0732">HTTP Response</a><br>
8. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0800">Acknowledgement</a><br>
9. <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0900">References</a></p><p></p><h2 class="dtH1"><a name="ws-routing_n0100"></a>1. Introduction</h2><p>SOAP Routing Protocol (WS-Routing) is a SOAP-based, stateless protocol for exchanging one-way SOAP messages from an initial sender to the ultimate receiver, potentially via a set of intermediaries. In addition, WS-Routing provides an optional reverse message path enabling two-way message exchange patterns like request/response, peer-to-peer conversations, and the return of message acknowledgements and faults.</p><p>SOAP [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_soap">15</a>] has been designed to be carried within or on top of a variety of other protocols. The boundary between SOAP and the underlying protocol is called a protocol binding. The purpose of a binding is to define the syntactic and semantic interactions between SOAP and the underlying protocol.</p><p>SOAP by itself does not define an actual message path along which a SOAP message is to travel. In order to provide the semantics for actually exchanging messages, SOAP can be bound to an application layer protocol such as HTTP or SMTP. These protocols define their own message path models and message exchange patterns that in general differ from the SOAP message model.</p><p>In contrast, WS-Routing describes the entire message path within the SOAP message structure using the SOAP extensibility model. This means that a WS-Routing enabled SOAP message does not require a binding to another application layer protocol for describing the message path.</p><p>Therefore, in addition to being carried within HTTP, WS-Routing allows a SOAP message to be exchanged directly over transport layer protocols such as TCP and UDP. This specification defines the use of WS-Routing in combination with TCP and UDP as well as HTTP but other protocols are possible.</p><p>Note that it is <i>not</i> the intent of WS-Routing to provide a complete set of services often considered part of reliable messaging, security, or other services that may be required in a messaging environment. Rather, the design goal is to provide a building block that can be used in combination with other SOAP-based protocols to achieve such goals.</p><h3 class="dtH1"><a name="ws-routing_n0110"></a>1.1 Purpose</h3><p>The purpose of WS-Routing is to define the mechanisms needed in order to describe messages being exchanged along the following two message paths:

</p><ul type="disc"><li>A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0420">forward message path</a> where messages travel from the initial sender through zero or more intermediaries to the ultimate receiver.</li><li>An optional <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0430">reverse message path</a> where messages travel in the direction from the ultimate receiver through zero or more intermediaries to the initial sender.</li></ul><p>Specifically, this specification defines the following mechanisms and concepts:

</p><ul type="disc"><li>The forward message path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0420">section 4.2</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">4.4</a>)</li><li>An optional reverse message path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0430">section 4.3</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0460">4.6</a>)</li><li>A correlation mechanism between messages (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0450">section 4.5</a>)</li></ul><p>Explicit focus has been put on simplicity and applicability of the protocol in the same way SOAP itself is widely applicable. This means that the mechanisms provided by this specification have been deliberately limited to serve the purposes stated above.</p><h2 class="dtH1"><a name="ws-routing_n0200"></a>2. Notational Conventions</h2><p>The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2119">3</a>].</p><p>The WS-Routing header entry is identified by the XML Namespace URI "<a href="http://schemas.xmlsoap.org/rp/ws-routing.xsd">http://schemas.xmlsoap.org/rp</a>". The elements defined by WS-Routing making up the SOAP header entry are defined by XML schema [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_xmls1">10</a>][<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_xmls2">11</a>].</p><h3 class="dtH1"><a name="ws-routing_n0210"></a>2.1 Compliance</h3><p>An implementation is not WS-Routing compliant if it fails to satisfy one or more of the MUST or REQUIRED level requirements defined in this specification.</p><p>A WS-Routing receiver that accepts incoming WS-Routing messages MUST be WS-Routing compliant. A WS-Routing sender MUST NOT use the "<a href="http://schemas.xmlsoap.org/rp/ws-routing.xsd">http://schemas.xmlsoap.org/rp</a>" XML Namespace identifier [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_xmlns">8</a>] unless it is WS-Routing compliant.</p><h2 class="dtH1"><a name="ws-routing_n0300"></a>3. The WS-Routing Model</h2><p>This chapter describes the WS-Routing model, which is based on the SOAP message path model described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0310">section 3.1</a>. The message path terminology used by WS-Routing is described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0320">section 3.2</a>, and the WS-Routing model is described in the remainder of this chapter.</p><h3 class="dtH1"><a name="ws-routing_n0310"></a>3.1 SOAP Message Path Model</h3><p>SOAP is based on a stateless, one-way message model defined in terms of SOAP senders and SOAP receivers that can send and receive SOAP messages respectively. In addition SOAP has the notion of intermediaries that can act as both senders and receivers.</p><p>Intermediaries are central to SOAP in that the SOAP message model provides a distributed processing mechanism in which the SOAP "<a href="http://www.w3.org/TR/SOAP/#_Toc478383499">actor</a>" attribute can be used to indicate which part of a message is intended for a given SOAP receiver. The purpose of this model is to provide a flexible mechanism for composing and using distributed value-added services such as annotation, collaboration, subscription, privacy enforcement, and caching. By allowing these services to be composed dynamically across network nodes, the model makes it possible to introduce new services for the proliferation of devices and end users' data (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rkar">13</a>], [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2774">14</a>]).</p><p>Despite the implied SOAP message model, SOAP does <i>not</i> define a mechanism for indicating the SOAP senders and receivers along the SOAP message path or the order in which the senders and receivers are composed. In short, SOAP does not define a "message path". For example, take four SOAP processors <b>A</b>, <b>B</b>, <b>C</b>, and <b>D</b>. A SOAP message generated by <b>A</b> can indicate which part of a message is for <b>B</b>, <b>C,</b> and <b>D</b>. However, it cannot indicate that the intermediaries are to be organized into a message path illustrated in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">Figure 1</a>.</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet0"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode0');">Copy</a></div></div><div id="CodeSnippetContainerCode0" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>+-----------+   +------------+   +------------+   +-------------+
|  Initial  |   |    SOAP    |   |    SOAP    |   |   Ultimate  |
|SOAP Sender|--&gt;|Intermediary|--&gt;|Intermediary|--&gt;|SOAP Receiver|
|     A     |   |      B     |   |      C     |   |      D      |
+-----------+   +------------+   +------------+   +-------------+

</pre></div></div></div></div><blockquote class="dtBlock"><b><a name="ws-routing_fig1"></a><b class="le">Figure 1</b></b>&nbsp;&nbsp;&nbsp;SOAP defines which parts of a message are for <b>B</b>, <b>C</b>, and <b>D</b> but not that the message is to travel from <b>A</b> via <b>B</b> via <b>C</b> to <b>D</b>.</blockquote><p>In order to provide the semantics for actually exchanging messages, SOAP can be bound to other application layer protocols such as HTTP and SMTP. However, these protocols define their own message path models and message exchange patterns, which differ from the general SOAP model. As a result, it is not possible to use these protocol bindings alone to describe an exchange of a SOAP message from <b>A</b> to <b>D</b>.</p><p>WS-Routing on the other hand, defines a message path model that is fully compatible with the SOAP message-processing model. In other words, WS-Routing makes it possible to describe the complete exchange of a SOAP message from <b>A</b> to <b>D</b> in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">Figure 1</a> and to describe which parts of a SOAP message is intended for what SOAP receiver in the message path.</p><h3 class="dtH1"><a name="ws-routing_n0320"></a>3.2 WS-Routing Message Path Terminology</h3><p>The WS-Routing message path terminology is based on the SOAP message model terminology. However, as not all SOAP messages are WS-Routing messages, an explicit distinction is made between SOAP messages in general and WS-Routing-enabled SOAP messages in particular. WS-Routing defines the following set of specific terms, which are used throughout this document:

</p><dl><dt><a name="ws-routing_g900"></a>WS-Routing header </dt><dd>A SOAP/1.1 header entry identified by the "<a href="http://schemas.xmlsoap.org/rp/ws-routing.xsd">http://schemas.xmlsoap.org/rp</a>" XML namespace URI and which complies with this specification (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0210">section 2.1</a>). </dd><dt><a name="ws-routing_g170"></a>WS-Routing message </dt><dd>A SOAP/1.1 message that contains a WS-Routing header composed in compliance with this specification (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0210">section 2.1</a>). </dd><dt><a name="ws-routing_g080"></a>WS-Routing fault message </dt><dd>A SOAP/1.1 fault message that contains a WS-Routing header composed in compliance with this specification (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0210">section 2.1</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>). </dd><dt><a name="ws-routing_g110"></a>WS-Routing sender </dt><dd>An application that generates a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> and binds to a specific underlying protocol for the purpose of transferring the message. </dd><dt><a name="ws-routing_g120"></a>WS-Routing receiver </dt><dd>An application that accepts an incoming <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> transferred using some underlying protocol for the purpose of processing the message. </dd><dt><a name="ws-routing_g100"></a>WS-Routing message path </dt><dd>The set of <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing senders</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receivers</a> that process a single <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> when it is exchanged. WS-Routing defines a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g180">forward message path</a> and a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g190">reverse message path</a>. </dd><dt><a name="ws-routing_g180"></a>forward WS-Routing message path </dt><dd>The message path used by a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> traveling from the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a>, through zero or more <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediaries</a>, and to the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a>. </dd><dt><a name="ws-routing_g190"></a>reverse WS-Routing message path </dt><dd>An optional message path that is built dynamically when a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> is sent along the forward message path. The reverse message path can be used for sending one or more <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing messages</a> to the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> of the message for which the reverse path was built. </dd><dt><a name="ws-routing_g340"></a>initial WS-Routing sender </dt><dd>The <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing sender</a> that originates a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> as the starting point of a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g100">WS-Routing message path</a>. </dd><dt><a name="ws-routing_g140"></a>WS-Routing intermediary </dt><dd>An application that can act as both a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing sender</a> and a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receiver</a> with the purpose of processing and forwarding a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> along a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g100">WS-Routing message path</a>. A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> can take on one of two roles: <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g5001">proxy</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g5501">tunnel</a> (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">section 3.4</a>). </dd><dt><a name="ws-routing_g5001"></a>WS-Routing proxy </dt><dd>A WS-Routing proxy is a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> that has taken on the role of serving an incoming message in which the proxy takes full part in the WS-Routing communication in accordance with <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0460">4.6</a>. </dd><dt><a name="ws-routing_g5501"></a>WS-Routing tunnel </dt><dd>An intermediary acting as a blind communication relay between two underlying communication channels. Once active, a tunnel is not considered a part of the WS-Routing communication. The tunnel ceases to exist when both the relayed communication channels are closed. A WS-Routing sender sending a message to an intermediary MUST explicitly request the tunnel role to be used. A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> MUST NOT use the tunnel role if not explicitly requested. WS-Routing does not define a mechanism for requesting a tunnel as it is expected to be defined in a separate specification. </dd><dt><a name="ws-routing_g130"></a>ultimate WS-Routing receiver </dt><dd>The <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receiver</a> that the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial sender</a> specifies as the final destination of the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> within a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g100">WS-Routing message path</a>. In case of a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g080">WS-Routing fault</a> along the message path, a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> may not reach the ultimate receiver. </dd><dt><a name="ws-routing_g800"></a>WS-Routing gateway </dt><dd>An <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> that performs a semantic mapping of a WS-Routing header, potentially into some other protocol unknown to SOAP and WS-Routing. An example would be a WS-Routing--&gt;Telnet protocol translation of the message (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0350">section 3.5</a>). </dd></dl><h3 class="dtH1"><a name="ws-routing_n0330"></a>3.3 WS-Routing and the SOAP Message Path Model</h3><p>This specification defines a single SOAP header entry, which describes a forward and optionally a reverse message path for a SOAP message for the purpose of exchanging messages along these message paths.</p><p>The WS-Routing design is based on the following model of communication: a message may be initiated for any reason defined by some application using WS-Routing. The <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> indicates the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> of the message and zero or more <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediaries</a> (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">section 3.4</a>) in the forward message path in the WS-Routing header. The message is transferred to the first WS-Routing receiver in the forward message path over some underlying protocol. If that WS-Routing receiver is an intermediary, it forwards the message to the next WS-Routing receiver in the forward message path until it reaches the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> or a fault occurs.</p><p>Given certain restrictions, WS-Routing intermediaries may dynamically insert additional intermediaries in the forward message path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">section 3.4</a>). That is, there is no requirement that the complete forward message be known at the time it leaves the initial WS-Routing sender.</p><p>In addition to the forward message path, WS-Routing defines an optional reverse message path that enables two-way message exchange patterns like request/response and peer-to-peer conversations as well as returning message acknowledgements and faults. The reverse path is built dynamically as a message flows in the forward direction (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0460">section 4.6</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">5.2</a>).</p><p>The purpose of the reverse path is to indicate a possible path for one or more messages to be sent to the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> of the message for which the reverse path was built. The WS-Routing message path model is still that of a one-way message but the reverse path allows a recipient of a message to send another message back to the initial WS-Routing sender without having to create the concept of a channel or virtual connection between the two parties.</p><p>There is no requirement that the reverse path actually be used nor does the reverse path enforce any particular message exchange pattern. If the reverse path is being used to exchange a message, the reverse path becomes the forward path and the exact same rules apply for the exchange as for any other message. This means that the generator of the message always is the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> and the final destination always is the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> regardless of whether the forward message path is a reverse message path of some other message.</p><p>Intermediaries may short-circuit the forward message path and, if appropriate, generate a message and send it along the reverse path. This can for instance be a cached version of a previous reply message. It is not within the scope of WS-Routing to specify when or how such a reverse path message is appropriate. The only reverse path messages defined by WS-Routing are WS-Routing fault messages (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</p><p>Any given underlying protocol that WS-Routing is bound to may provide a bidirectional communication channel (TCP for example) or a unidirectional communication channel (UDP for example). Depending on the WS-Routing protocol binding, reverse path messages may or may not be transferred on the same communication channel.</p><p>Regardless of whether the communication channel is unidirectional or bidirectional, it is possible that a WS-Routing sender may wish to indicate a different endpoint for the optional reverse path. WS-Routing defines a reverse path that can be either explicitly specified independently of the underlying protocol, or implicitly specified as a function of the underlying protocol (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0519">section 5.1.8</a>). That is, <i>if</i> the protocol binding provides a bidirectional channel then the implicit reverse message path is defined as being that channel.</p><p>In some cases, it may be desirable to switch between protocol bindings along a given message path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0350">section 3.5</a>). For example, for optimization purposes, it might be desirable to use TCP on some parts and UDP on other parts of a message path. WS-Routing does not itself define any security or reliability services, which means that there are no means within WS-Routing to compensate for different levels of services provided by the underlying protocol. It is expected that other SOAP-based protocols will provide policies and mechanisms for end-to-end quality of service guarantees.</p><h3 class="dtH1"><a name="ws-routing_n0340"></a>3.4 WS-Routing Intermediaries</h3><p>WS-Routing intermediaries can process and forward WS-Routing messages on behalf of other WS-Routing senders. WS-Routing defines the terms "proxy" and "tunnel" (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0320">section 3.2</a>) as the two possible roles that a WS-Routing intermediary can take on in order to serve an incoming message.</p><p>The purpose of the WS-Routing intermediaries is to provide a mechanism for allowing WS-Routing applications to

</p><ul type="disc"><li>access value-added services that the WS-Routing sender may have subscribed to or is otherwise using. Examples of such services are annotation services, collaboration services, subscription management services, privacy enforcement services, caching services, etc.</li><li>facilitate traversal of application-level intermediaries such as application relay firewalls that have been put in place for administrative or policy purposes.</li></ul><p>Given the restrictions below, it is possible to insert additional intermediaries in the forward message path without renegotiating the message path with the previous WS-Routing sender. A WS-Routing intermediary intending to insert additional intermediaries in the forward message path MAY do so if it fulfills the following criteria:

</p><ul type="disc"><li>it SHOULD NOT insert intermediaries unless it has administrative reasons for doing so or is using a value-added service provided by those intermediaries;</li><li>it MUST NOT insert intermediaries immediately <i>before</i> an empty "via" element in the forward message path as empty "via" elements indicate an implicit reverse message path defined by the underlying protocol (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0519">section 5.1.8</a>);</li><li>it SHOULD be careful not to introduce infinite routing loops when adding intermediaries to the message path.</li></ul><p>A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> MUST NOT rewrite the "to" element of a WS-Routing message (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0518">5.1.7</a>).</p><p>A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> MAY use a different underlying protocol binding for the sending and receiving side. An example of a change in protocol bindings is WS-Routing/TCP--&gt;WS-Routing/UDP as illustrated in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig2">Figure 2</a> (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0700">section 7</a> for the WS-Routing bindings to TCP and UDP):</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet1"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode1');">Copy</a></div></div><div id="CodeSnippetContainerCode1" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>+------------+   +------------+   +------------+   +-------------+
|  Initial   |   | WS-Routing |   | WS-Routing |   |  Ultimate   |
| WS-Routing |--&gt;|Intermediary|--&gt;|Intermediary|--&gt;|  WS-Routing |
|  Sender A  |   |      B     |   |      C     |   |  Receiver D |
+------------+   +------------+   +------------+   +-------------+
              TCP              UDP              TCP

</pre></div></div></div></div><blockquote class="dtBlock"><b><a name="ws-routing_fig2"></a><b class="le">Figure 2</b></b>&nbsp;&nbsp;&nbsp;Examples of possible changes in underlying protocols</blockquote><p>Note again, that WS-Routing does not define any security or reliability services, which means that there are no means within WS-Routing to compensate for different levels of services provided by the underlying protocol. It is expected that other SOAP-based protocols will provide policies and mechanisms for end-to-end quality of service guarantees.</p><h3 class="dtH1"><a name="ws-routing_n0350"></a>3.5 WS-Routing Gateways</h3><p>A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receiver</a> can act as a gateway <i>into</i> a foreign protocol environment. A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing sender</a> sending a message to a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receiver</a> acting as a gateway may not know that it is communicating with a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g800">WS-Routing gateway</a>. Similarly, a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing sender</a> can act as a gateway <i>from</i> a foreign protocol environment into WS-Routing and likewise, a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receiver</a> receiving a message from a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing sender</a> acting as a gateway may not know that it is communicating with a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g800">WS-Routing gateway</a>.</p><p>WS-Routing gateways SHOULD take into account proper migration of fault codes across the protocol boundaries. If the foreign protocol environment has no equivalent concept of faults, the gateway SHOULD select and use a best approximation of WS-Routing fault codes.</p><p>A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> that also acts as a WS-Routing gateway MUST follow the rules of a WS-Routing intermediary and MUST perform the gateway functionality as part of both the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g110">WS-Routing sender</a> and the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g120">WS-Routing receiver</a> in order to forward the message along the WS-Routing message path (see also section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0350">3.4</a>).</p><p>For the purpose of this specification, a WS-Routing receiver that rewrites the "to" element of a WS-Routing message is considered a WS-Routing gateway (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0518">5.1.7</a>). A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> that uses a different underlying protocol binding on the sending and receiving side is <i>not</i> considered a gateway although it may still have to map fault codes across the protocol binding boundaries.</p><h3 class="dtH1"><a name="ws-routing_n0360"></a>3.6 Fan-in and Fan-out Message Path Models</h3><p>WS-Routing does not define any fan-in or fan-out message path models, which may be required to encapsulate the semantics of more complex multi-party interactions. It is not a design goal of this specification to directly support these models as it is anticipated that other message routing specifications will define support for such patterns.</p><h2 class="dtH1"><a name="ws-routing_n0400"></a>4. The WS-Routing Mechanisms</h2><p>This section introduces the mechanisms used in WS-Routing for describing the forward message path as well as the reverse message path and how to control these paths.</p><h3 class="dtH1"><a name="ws-routing_n0410"></a>4.1 Endpoints</h3><p>WS-Routing defines the following elements to indicate the senders and receivers in a message path:

</p><dl><dt>to </dt><dd>Identifies the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> by means of a URI (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0518">section 5.1.7</a>). </dd><dt>via </dt><dd>Identifies by means of a URI an intermediary that the message must pass along the message path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0519">section 5.1.8</a> for a discussion of the possible values of the "via" element). </dd><dt>from </dt><dd>Identifies the party originating the message by means of a URI (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0513">section 5.1.2</a>). </dd></dl><p>Note, that in WS-Routing both the endpoint for which the message is intended as well as any intermediary that the message is to go through is identified by URIs. The "to" element identifies the resource for which the message is intended similar to the HTTP Request-URI (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2616">6</a>] section 5.1.2) and the "via" elements identify the intermediaries along the message path.</p><h3 class="dtH1"><a name="ws-routing_n0420"></a>4.2 The Forward Message Path</h3><p>WS-Routing defines the following element for describing the forward message path:

</p><dl><dt>fwd </dt><dd>Describes the forward message path as an ordered list of "via" elements indicating the intermediaries that the message must go through (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0517">section 5.1.6</a>). </dd></dl><p>The forward path can be constructed as the message moves along the message path or at the initial SOAP sender (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>).</p><h3 class="dtH1"><a name="ws-routing_n0430"></a>4.3 The Reverse Message Path</h3><p>WS-Routing defines the following element for describing an optional reverse message path that can be used to transfer messages to the initial WS-Routing sender if requested:

</p><dl><dt>rev </dt><dd>Describes the reverse message path as an ordered list of "via" elements indicating the reverse path that reverse path messages must go through (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0517">section 5.1.6</a>). </dd></dl><p>If a "rev" element is present in a message then the reverse path is constructed as the message moves along the message path as described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0460">section 4.6</a>.</p><h3 class="dtH1"><a name="ws-routing_n0440"></a>4.4 Traversing the Forward Message Path</h3><p>This section describes the algorithm for traversing a forward message path. The following rules ensure that a message can travel from the initial WS-Routing sender to the ultimate WS-Routing receiver:

</p><ol type="1"><li>The initial WS-Routing sender MUST generate a WS-Routing "path" header that indicates the route to be taken by the message. The path MAY indicate a route via one or more intermediaries using the "via" elements as sub-elements of the "fwd" element. The initial sender MAY indicate the ultimate destination by using a "to" element. In the absence of a "to" element the ultimate destination is indicated by the last "via" in the "fwd" element. The second option occurs most commonly when an ultimate destination reverses roles, becomes an initial sender, and uses the reverse path in a received message as a forward path to send a response to the original sender.
<p>In addition the initial WS-Routing sender MAY insert a reverse path for indicating where the initial sender can receive reverse path messages. The initial sender sets the ultimate destination in the reverse path using a "via" element as a sub-element of the "rev" element.
</p></li><li>A WS-Routing receiver receiving a WS-Routing message MUST inspect the WS-Routing header and perform the following operations:
<ul type="disc"><li>If no "fwd" element is present or if the "fwd" element does not contain any "via" elements then inspect the "to" element and verify that the value identifies THIS WS-Routing receiver. If this is the case then THIS WS-Routing receiver is the ultimate destination. If there is no "to" element or if the value of the "to" element does not identify THIS WS-Routing receiver then generate a fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</li><li>If the "fwd" element is present and contains one or more "via" element(s) then remove the top "via" element listed in the "fwd" element and verify that the value of that "via" element is either empty or identifies THIS WS-Routing receiver or failing that generate an appropriate WS-Routing fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>). If, after removing the top "via" element there are no remaining "via" element(s) listed in the "fwd" element, and there is no "to" element, then THIS WS-Routing receiver is the ultimate destination.</li></ul></li><li>A WS-Routing intermediary MUST follow these additional rules:
<ul type="disc"><li>A WS-Routing intermediary MAY add to the remaining message path given the restrictions listed in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">section 3.4</a>.</li><li>If a "rev" element is present then add a "via" element as the first "via" element listed in the "rev" element with a value indicating the reverse path endpoint. If a reverse path endpoint cannot be provided then generate a 751 "Reverse Path Unavailable" WS-Routing fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</li><li>If one or more "via" element(s) remain in the "fwd" element then forward the WS-Routing message to the endpoint identified by the new top "via" element listed in the "fwd" element.</li><li>If there are no remaining "via" element(s) listed in the "fwd" element but there is a "to" element then forward the WS-Routing message to the endpoint identified by the "to" element.</li><li>In the last two cases if the forwarding does not succeed then generate the appropriate WS-Routing fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</li></ul></li></ol><p>Note that the list of "via" elements in the forward message path is ordered and multiple WS-Routing processors along it may or may not reside physically at the same host. The ordering must always be respected for processing regardless. For instance, it is possible that the last <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> and the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> both reside at the same host. The algorithm above ensures that the intermediary role is executed before the ultimate receiver role.</p><p>The example below, <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0010">Example 1</a>, illustrates a very simple message path with no intermediaries and no reverse path.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0010"></a><b class="le">Example 1</b></b>&nbsp;&nbsp;&nbsp;Minimalist message with no reverse path and no intermediaries in the message path</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet2"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode2');">Copy</a></div></div><div id="CodeSnippetContainerCode2" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.notification.org/update&lt;/m:action&gt;
         &lt;m:to&gt;soap://notification.com/some/endpoint&lt;/m:to&gt;
         &lt;m:id&gt;uuid:09233523-345b-4351-b623-5dsf35sgs5d6&lt;/m:id&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><p>Below is a set of examples illustrating a message traversing the forward message path depicted in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">Figure 1</a>:</p><blockquote class="dtBlock"><b><a name="ws-routing_c0020"></a><b class="le">Example 2</b></b>&nbsp;&nbsp;&nbsp;Message leaving initial <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">WS-Routing Sender A</a> in forward direction towards B with a reverse path</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet3"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode3');">Copy</a></div></div><div id="CodeSnippetContainerCode3" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.im.org/chat&lt;/m:action&gt;
         &lt;m:to&gt;soap://D.com/some/endpoint&lt;/m:to&gt;
         &lt;m:fwd&gt;
            &lt;m:via&gt;soap://B.com&lt;/m:via&gt;
            &lt;m:via&gt;soap://C.com&lt;/m:via&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via/&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:henrikn@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:id&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><blockquote class="dtBlock"><b><a name="ws-routing_c0030"></a><b class="le">Example 3</b></b>&nbsp;&nbsp;&nbsp;Message leaving <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary B</a> in forward direction towards <b>C</b> with a reverse path</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet4"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode4');">Copy</a></div></div><div id="CodeSnippetContainerCode4" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.im.org/chat&lt;/m:action&gt;
         &lt;m:to&gt;soap://D.com/some/endpoint&lt;/m:to&gt;
         &lt;m:fwd&gt;
            &lt;m:via&gt;soap://C.com&lt;/m:via&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via/&gt;
            &lt;m:via m:vid="cid:122326@B.com"/&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:henrikn@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:id&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><p>An empty "via" element indicates that the reverse path is provided by the underlying protocol, i.e. the underlying protocol provides a bidirectional communication channel (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0519">section 5.1.8</a>).</p><p>Note that <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary B</a> in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0030">Example 3</a> has added an optional "vid" attribute to the empty "via" element inserted by the original sender <b>A</b> (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n05191">5.1.8</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n05191">5.1.8.1</a>). The "vid" attribute enables an intermediary such as <b>B</b> to identify the bidirectional channel back to <b>A</b> without maintaining per message state and without requiring a one-to-one correspondence between the bidirectional channel <b>B</b> uses to reach <b>C</b> and the bidirectional channel <b>A</b> used to reach <b>B</b>. This allows the management of channels between <b>B</b> and <b>C</b> to happen completely independent of the management between <b>A</b> and <b>B</b> (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0711">7.2.1</a>).</p><p>In the next example, <b>C</b> chooses to preserve the empty "via" element inserted by <b>B</b> for the reverse path from <b>C</b> to <b>B</b> because it is able to correlate the UDP endpoint it inserts for the reverse path to itself from <b>D</b> with the connection to be used to continue the reverse path to <b>B</b>.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0040"></a><b class="le">Example 4</b></b>&nbsp;&nbsp;&nbsp;Message leaving <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary C</a> in forward direction towards D with a reverse path</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet5"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode5');">Copy</a></div></div><div id="CodeSnippetContainerCode5" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.im.org/chat&lt;/m:action&gt;
         &lt;m:to&gt;soap://D.com/some/endpoint&lt;/m:to&gt;
         &lt;m:fwd&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via&gt;soap://C.com/rev/endpoint1;up=udp&lt;/m:via&gt;
            &lt;m:via/&gt;
            &lt;m:via m:vid="cid:122326@B.com"/&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:henrikn@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:id&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><h3 class="dtH1"><a name="ws-routing_n0450"></a>4.5 Identifying and Correlating Messages</h3><p>Being able to identify a message and to correlate that message with other messages is essential to WS-Routing. The correlation can for example be between multiple messages flowing in the same direction on either the forward or the reverse message path or it can be between messages on different message paths. An example of a correlation is between a WS-Routing fault message and the faulty message. WS-Routing defines the following two elements to enable this correlation:

</p><dl><dt><b>id </b></dt><dd>The value of the "id" element is a unique identifier in the form of a URI that identifies THIS message (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0515">section 5.1.4</a>). </dd><dt><b>relatesTo </b></dt><dd>The value of the "relatesTo" element is the value of the "id" element of the message that this message is related to. A message can have any number of related messages (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0516">section 5.1.5</a>). </dd></dl><p>Section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0515">5.1.4</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0516">5.1.5</a> describe in more detail the problem of defining uniqueness.</p><h3 class="dtH1"><a name="ws-routing_n0460"></a>4.6 Using the Reverse Message Path</h3><p>The optional reverse message path can be used for sending one or more <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing messages</a> to the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> of the message for which the reverse path was built. The reverse message path can be used for two-way message exchange patterns like request/response, peer-to-peer conversation as well as returning message acknowledgements and faults.</p><p>If a "rev" element is present in a message, the reverse message path is built dynamically when a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g170">WS-Routing message</a> travels along the forward message path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>). Only an <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> MAY insert a "rev" element into a message. If the WS-Routing receiver is an intermediary and a reverse path cannot be established to the next WS-Routing receiver in the message path then it MUST generate an 751 "Reverse Path Unavailable" WS-Routing fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>). A WS-Routing receiver MUST NOT remove the "rev" element from a message.</p><p>If the reverse message path of a WS-Routing message is to be used for sending another message, the ordered list of "via" elements in the "rev" element is used as the list of "via" elements in the "fwd" element as described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>. A WS-Routing message being exchanged using a reverse message path is in all respects like any other WS-Routing message and follows the exact same rules as described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>.</p><p>Note that there is no requirement that the reverse path actually be used nor is there a requirement that reverse path messages be sent in the same order as messages in the forward path or even that there is an equal number of messages flowing in either direction (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0450">section 4.5</a> for how to correlate WS-Routing messages).</p><p>A message being exchanged in the reverse message path can itself define a reverse path allowing for message dialogs. In order to avoid "fault loops", a WS-Routing fault message MUST NOT be sent in response to another WS-Routing fault message (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</p><p>Below is a set of examples illustrating a message traversing the reverse message path built in Examples 2-4. In <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0050">Example 5</a>, <b>D</b> sends the message to the endpoint defined by <b>C</b> for the reverse path. As this endpoint uses UDP, which is not a bidirectional channel, <b>D</b> cannot use an empty "via" element in its reverse path.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0050"></a><b class="le">Example 5</b></b>&nbsp;&nbsp;&nbsp;Reverse path message leaving<b></b><a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">ultimate WS-Routing receiver D</a> headed for explicit reverse path endpoint at<b></b><a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">C</a></blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet6"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode6');">Copy</a></div></div><div id="CodeSnippetContainerCode6" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.im.org/update&lt;/m:action&gt;
         &lt;m:fwd&gt;
            &lt;m:via&gt;soap://C.com/rev/endpoint1;up=udp&lt;/m:via&gt;
            &lt;m:via/&gt;
            &lt;m:via m:vid="cid:122326@B.com"/&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via&gt;soap://D.com/some/endpoint&lt;/m:via&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:satisht@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:9fshs8fj-sffg-r5ts-adfg-9kd84jd9mjdld43&lt;/m:id&gt;
         &lt;m:relatesTo&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:relatesTo&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><blockquote class="dtBlock"><b><a name="ws-routing_c0060"></a><b class="le">Example 6</b></b>&nbsp;&nbsp;&nbsp;Reverse path message leaving <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary C</a> headed for implicit reverse path endpoint at <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">B</a></blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet7"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode7');">Copy</a></div></div><div id="CodeSnippetContainerCode7" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.im.org/update&lt;/m:action&gt;
         &lt;m:fwd&gt;
            &lt;m:via/&gt;
            &lt;m:via m:vid="cid:122326@B.com"/&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via&gt;soap://C.com/rev/endpoint2;up=udp&lt;/m:via&gt;
            &lt;m:via&gt;soap://D.com/some/endpoint&lt;/m:via&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:satisht@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:9fshs8fj-sffg-r5ts-adfg-9kd84jd9mjdld43&lt;/m:id&gt;
         &lt;m:relatesTo&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:relatesTo&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><p>When the messages reach <b>B</b>, it can recover the value of the "vid" attribute that it inserted in the forward message path and find the correct transport channel for sending the message to <b>A</b>. As the value of the "vid" attribute is meaningful to <b>B</b> only it MUST take out the value before forwarding the message to <b>A</b>.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0070"></a><b class="le">Example 7</b></b>&nbsp;&nbsp;&nbsp;Reverse path message leaving <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary B</a> headed for implicit reverse path endpoint at <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">A</a></blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet8"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode8');">Copy</a></div></div><div id="CodeSnippetContainerCode8" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://www.im.org/update&lt;/m:action&gt;
         &lt;m:fwd&gt;
            &lt;m:via/&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via/&gt;
            &lt;m:via&gt;soap://C.com/rev/endpoint2;up=udp&lt;/m:via&gt;
            &lt;m:via&gt;soap://D.com/some/endpoint&lt;/m:via&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:satisht@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:9fshs8fj-sffg-r5ts-adfg-9kd84jd9mjdld43&lt;/m:id&gt;
         &lt;m:relatesTo&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:relatesTo&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><p>When the message arrives at <b>A</b>, the reverse path contains a possible forward path for sending another message to <b>D</b>.</p><h2 class="dtH1"><a name="ws-routing_n0500"></a>5. The WS-Routing Specifications</h2><h3 class="dtH1"><a name="ws-routing_n0510"></a>5.1 WS-Routing Header Elements</h3><p>All element content values in WS-Routing are defined as URIs without exception. This section defines the WS-Routing elements in which URIs are used and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0530">section 5.3</a> defines the rules for handling URIs as values in WS-Routing.</p><p>WS-Routing header elements not defined by this specification SHOULD be ignored by a WS-Routing receiver and MUST be forwarded by WS-Routing intermediaries.</p><h4 class="dtH1"><a name="ws-routing_n0511"></a>5.1.1 action</h4><p>The "action" element is used to indicate the intent of the WS-Routing message in a manner similar to the SOAPAction HTTP header field defined for SOAP (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0900">15</a>], section 6.1.1). The value is a URI identifying the intent. Similar to the SOAPAction header field, WS-Routing places no restrictions on the format or specificity of the URI or requires that it can be dereferenced. There is no mechanism for computing the value based on the message and there is no default value.</p><p>An explicit "action" element MUST be present in all WS-Routing messages. It MUST be generated by the initial WS-Routing sender and MUST NOT be modified along the message path. WS-Routing defines a specific value that MUST be used to identify WS-Routing fault messages as defined by this specification:

</p><dl><dt>WS-Routing fault messages </dt><dd>The value "http://schemas.xmlsoap.org/soap/fault" MUST be used when the message is a SOAP fault message (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0320">3.2</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">5.2</a>) regardless of whether it is carrying a WS-Routing fault or some other SOAP fault. </dd></dl><h4 class="dtH1"><a name="ws-routing_n0513"></a>5.1.2 from</h4><p>The "from" element can be used to identify the entity or human who is responsible for the message. It MAY be generated by an <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a>. It MUST NOT be generated by any other WS-Routing sender.</p><p>The value of a "from" element, if given, is a URI and typically it will be in the form of a "mailto:" URI. The semantics of the "from" element is similar to that of the HTTP "From" header field (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2616">6</a>], section 14.22).</p><p>A WS-Routing receiver MAY use the "from" element for logging purposes and as a means for identifying the person responsible for the message. It SHOULD NOT be used as an insecure form of access protection nor as a trusted identity mechanism.</p><p>Sending a "from" element can have privacy implications that may be in conflict with the user's privacy interests. It is expected that initiatives like <a href="http://www.w3.org/P3P/">P3P</a> can provide a mechanism for describing a user's privacy policy.</p><h4 class="dtH1"><a name="ws-routing_n0514"></a>5.1.3 fwd</h4><p>The "fwd" element contains an ordered list of intermediaries that the message is to pass on the forward message path. Each intermediary is indicated using the "via" element and is listed in the top-down order in which they are to be contacted. The mechanism used for traversing the message path is described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>.</p><h4 class="dtH1"><a name="ws-routing_n0515"></a>5.1.4 id</h4><p>The "id" element MUST be used to uniquely identify a message. It MUST be generated by the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> and MUST NOT be modified along the message path. The value of the element is a unique identifier in the form of a URI that refers to THIS message and this message only.</p><p>An "id" value MUST NOT be reused in any other WS-Routing message regardless of whether the message is being exchanged via the forward or the reverse message path.</p><p>Examples of "id" element values are:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet9"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode9');">Copy</a></div></div><div id="CodeSnippetContainerCode9" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6
mid:C10F7F15B07@bar.net

</pre></div></div></div></div><p>The uniqueness of the message identifier is guaranteed by the initial WS-Routing sender. It is STRONGLY RECOMMENDED that the identifier is as unique over space and time as possible and that identity values are either Universally Unique Identifiers (UUIDs), as illustrated in the example above or generated from message content using cryptographic hash algorithms such as MD5.</p><h4 class="dtH1"><a name="ws-routing_n0516"></a>5.1.5 relatesTo</h4><p>The "relatesTo" element MAY be used in any message to indicate that the message is related to another message in some manner. The element can be used to indicate relationships between two messages regardless of whether they use the same message path or not. Multiple messages can be related to the same message allowing for supporting a variety of message exchange patterns.</p><p>It is not the intent of the "relatesTo" element to indicate <i>how</i> two messages are related—the exact relationship is expected to be defined elsewhere in the message. If used, the element MUST be generated by the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> and the element value MUST be the exact value of the corresponding "id" element. Below is an example of a "relatesTo" element:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet10"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode10');">Copy</a></div></div><div id="CodeSnippetContainerCode10" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;relatesTo&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/relatesTo&gt;

</pre></div></div></div></div><p>WS-Routing fault messages MUST use the "relatesTo" element to indicate the relationship between the WS-Routing fault and the faulty message (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</p><h4 class="dtH1"><a name="ws-routing_n0517"></a>5.1.6 rev</h4><p>The "rev" element describes the reverse path that reverse path messages must follow. Each party in the reverse message path including the initial WS-Routing sender is listed in a top-down order using the "via" element. The mechanism used for traversing a message path is described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>.</p><p>A "rev" element MAY be inserted into a message by the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a>. It MUST NOT be inserted by any other party in the message path.</p><h4 class="dtH1"><a name="ws-routing_n0518"></a>5.1.7 to</h4><p>The "to" element is used to indicate the ultimate destination of the message in a way similar to the <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html">HTTP Request-URI</a>. However, it is important to note that there is no request/response message exchange pattern implied by its use in WS-Routing.</p><p>Unless a message follows the reverse message path of another message, the initial WS-Routing sender MAY insert a "to" element into a message. A reverse path message MUST NOT contain a "to" element as the ultimate destination is already indicated as part of the reverse message path (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0517">5.1.6</a>).</p><p>The value of the "to" element MUST be determined by the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a>. Intermediaries MUST NOT modify the value.</p><h4 class="dtH1"><a name="ws-routing_n0519"></a>5.1.8 via</h4><p>The "via" element is used to indicate that a message is to go through a WS-Routing receiver identified by the value of the "via" element. It can be inserted by any WS-Routing sender in the message path following the rules described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">section 3.4</a>.</p><p>The value of a "via" element can be either empty or an absolute URI (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0530">section 5.3</a>). A non-empty value indicates the explicit endpoint of the WS-Routing receiver that is to receive the message at a given point in the forward message path.</p><p>An empty value indicates an implicit endpoint provided by the underlying protocol binding, typically as a result of a previous message having built a reverse message path using that underlying communication channel. The mechanism used for traversing the forward and reverse message path is described in section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">4.4</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0460">4.6</a> respectively.</p><h4 class="dtH1"><a name="ws-routing_n05191"></a>5.1.8.1 The vid Attribute</h4><p>A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> MAY insert an "vid" attribute on the topmost "via" element in the reverse path of the message that it receives if that "via" element is empty. As stated above, an empty "via" element indicates that the message path is provided by the underlying protocol, i.e. the underlying protocol provides a bidirectional communication channel.</p><p>The purpose of the "vid" attribute is to enable an intermediary to identify the bidirectional channel to the previous WS-Routing sender without maintaining per message state and without requiring a one-to-one correspondence between the bidirectional channel to the previous WS-Routing sender and the next WS-Routing receiver in the forward message path. This allows a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> to separate the management of bidirectional channels to the previous WS-Routing sender and the next WS-Routing receiver in the message path (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0711">7.2.1</a>).</p><p>The value of the "vid" attribute is a unique URI that can be used by the generator of the value to correlate between the bidirectional communication channel indicated by the empty "via" element and messages using the reverse path.</p><p>Examples of "vid" element values are:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet11"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode11');">Copy</a></div></div><div id="CodeSnippetContainerCode11" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>cid:C10F7B07@bar.net
uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6

</pre></div></div></div></div><p>The uniqueness of the value of the "vid" attribute is guaranteed by the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> generating it. It is STRONGLY RECOMMENDED that the identifier is as unique over space and time as possible.</p><h3 class="dtH1"><a name="ws-routing_n0520"></a>5.2 WS-Routing Fault Messages</h3><p>WS-Routing defines a variety of fault messages indicating problems that can occur along the message path. Any WS-Routing receiver along the message path MAY generate a WS-Routing fault.</p><p>If there is a reverse message path present in the faulty WS-Routing message then the WS-Routing fault SHOULD be returned to the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a>. If the message path is not bidirectional then the fault message SHOULD be discarded.</p><p>WS-Routing fault messages MUST use the "relatesTo" element to indicate the relationship between the WS-Routing fault and the faulty message (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0516">section 5.1.5</a>).</p><p>A WS-Routing fault MUST NOT be exchanged in response to another WS-Routing fault message as this can result in infinite "fault loops". WS-Routing faults generated in response to other WS-Routing faults MUST be silently discarded.</p><p>WS-Routing faults are carried within the WS-Routing header together with a SOAP fault message in the WS-Routing message body. The WS-Routing header contains the WS-Routing fault information. WS-Routing defines two classes of fault codes: "Sender" faults and "Receiver" faults that match the SOAP fault codes "Client" and "Server".</p><p>The term "Sender" and "Receiver" is always relative to the message path. For example, in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0030">Example 3</a>, the Sender is <b>B</b> and the Receiver is <b>C</b>, and in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0060">Example 6</a>, the Sender is <b>C</b> and the Receiver is <b>B</b>.</p><p>A WS-Routing fault element contains two sub-elements:

</p><dl><dt>code </dt><dd>The value of the "code" element is a number defined by this specification indicating the WS-Routing specific fault code. </dd><dt>reason </dt><dd>The value of the "reason" element is a phrase explaining the WS-Routing fault code intended for human consumption. This specification suggests English phrases but there is no requirement that these phrases be used. </dd></dl><p>In addition, the fault element can contain information specific to individual WS-Routing fault codes as defined in section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0521">5.2.1</a> and <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0522">5.2.2</a>.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0090"></a><b class="le">Example 9</b></b>&nbsp;&nbsp;&nbsp;An example of a WS-Routing fault message generated by ultimate <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">WS-Routing recipient D</a> with a WS-Routing fault element</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet12"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode12');">Copy</a></div></div><div id="CodeSnippetContainerCode12" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://schemas.xmlsoap.org/soap/fault&lt;/m:action&gt;
         &lt;m:fwd&gt;
            &lt;m:via&gt;soap://C.com/rev/endpoint1/&lt;/m:via&gt;
            &lt;m:via/&gt;
            &lt;m:via/&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:satisht@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;mid:C10F7F33B880B248BC8470115B07@bar.net&lt;/m:id&gt;
         &lt;m:relatesTo&gt;uuid:67823759-45f3-45ds-56g6-45fw45wg66sf&lt;/m:relatesTo&gt;
         &lt;m:fault&gt;
            &lt;m:code&gt;812&lt;/m:code&gt;
            &lt;m:reason&gt;Service Too Busy&lt;/m:reason&gt;
            &lt;m:retryAfter&gt;300&lt;/m:retryAfter&gt;
         &lt;/m:fault&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      &lt;S:Fault&gt;
         &lt;S:faultcode&gt;S:Server&lt;/S:faultcode&gt;
         &lt;S:faultstring&gt;Server Error&lt;/S:faultstring&gt;
      &lt;/S:Fault&gt;
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><p>An intermediary can generate a fault message indicating that the message cannot be sent further along the message path.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0100"></a><b class="le">Example 10</b></b>&nbsp;&nbsp;&nbsp;This is a fault message generated by <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary C</a> sent via the reverse message path similar to <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0040">Example 4</a> but where a bidirectional message path is available. The fault message is returned to the initial WS-Routing sender, <b>A</b>, instead of being forwarded to the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a>, <b>D</b>.</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet13"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode13');">Copy</a></div></div><div id="CodeSnippetContainerCode13" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"&gt;
         &lt;m:action&gt;http://schemas.xmlsoap.org/soap/fault&lt;/m:action&gt;
         &lt;m:fwd&gt;
            &lt;m:via/&gt;
            &lt;m:via/&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
         &lt;/m:rev&gt;
         &lt;m:id&gt;uuid:847sjsk5-gdfa-rdg2-45as-87ahsja8mjdld43&lt;/m:id&gt;
         &lt;m:relatesTo&gt;uuid:1254sd65-44f3-45d4-5345-4t3w4984621e&lt;/m:relatesTo&gt;
         &lt;m:fault&gt;
            &lt;m:code&gt;710&lt;/m:code&gt;
            &lt;m:reason&gt;Endpoint Not Found&lt;/m:reason&gt;
            &lt;m:endpoint&gt;soap://D.com/some/endpoint&lt;/m:endpoint&gt;
         &lt;/m:fault&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      &lt;S:Fault&gt;
         &lt;S:faultcode&gt;S:Client&lt;/S:faultcode&gt;
         &lt;S:faultstring&gt;Client Error&lt;/S:faultstring&gt;
         &lt;S:faultactor&gt;soap://C.com&lt;/S:faultactor&gt;
      &lt;/S:Fault&gt;
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><p>WS-Routing uses a fault code numbering scheme similar to that seen in HTTP but the specific values are completely orthogonal to any status codes defined by HTTP and they are only used to indicate faults. The way SOAP defines fault codes avoids conflicts between fault codes defined in a decentralized environment. The WS-Routing fault codes are therefore orthogonal to fault codes defined by other SOAP-based protocols.</p><p>WS-Routing defines the following two classes of fault codes:

</p><dl><dt>7xx WS-Routing Sender fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0521">section 5.2.1</a>) </dt><dd>The WS-Routing sender sent what appears to be a faulty WS-Routing header that cannot be fulfilled because of insufficient or unacceptable information. </dd><dt>8xx WS-Routing Receiver fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0522">section 5.2.2</a>) </dt><dd>The WS-Routing receiver failed to fulfill an apparently valid WS-Routing header because of a fault situation not directly attributable to the received header. </dd></dl><p>The "xx" part of the WS-Routing fault codes is not significant. In the next two sections, the specific WS-Routing fault codes and their associated reason phrases are defined.</p><h4 class="dtH1"><a name="ws-routing_n0521"></a>5.2.1 WS-Routing Sender Faults</h4><p>The WS-Routing sender sent what appears to be a faulty WS-Routing header that cannot be fulfilled because of insufficient or unacceptable information. Unless explicitly stated, no information is given to whether the fault situation is permanent or temporary.</p><h4 class="dtH1"><a name="ws-routing_n05211"></a>5.2.1.1 700 Invalid WS-Routing Header</h4><p>The WS-Routing header is either malformed or incomplete. No further information is given about what caused the fault. The 700 fault code is special in that a recipient of a WS-Routing fault message SHOULD treat unknown 7xx fault codes as 700 "Invalid WS-Routing Header". The message SHOULD NOT be retried without modifications.</p><h4 class="dtH1"><a name="ws-routing_n05212"></a>5.2.1.2 701 WS-Routing Header Required</h4><p>A WS-Routing header entry was not present in the SOAP message and is therefore not compliant with WS-Routing (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0210">section 2.1</a>). This fault code is appropriate if there is no WS-Routing header present at all within the message resulting in the fault. If there is a WS-Routing header present and it is malformed or incomplete then a 700 "Invalid WS-Routing Header" fault code is appropriate. The message SHOULD NOT be retried without modifications.</p><h4 class="dtH1"><a name="ws-routing_n05213"></a>5.2.1.3 710 Endpoint Not Found</h4><p>An endpoint in the message path was not found. This fault code is appropriate if the WS-Routing receiver would otherwise have been able to service that endpoint (see also the 712 "Endpoint Not Supported" fault code). The endpoint can either be an intermediary identified by a "via" element or it can be the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> identified by the "to" element. The WS-Routing receiver MUST indicate the endpoint in question in the "endpoint" fault sub-element.</p><p>An example of a 710 WS-Routing fault element (XML Namespace prefix left out for illustrative reasons)</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet14"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode14');">Copy</a></div></div><div id="CodeSnippetContainerCode14" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;fault&gt;
  &lt;code&gt;710&lt;/code&gt;
  &lt;reason&gt;Endpoint Not Found&lt;/reason&gt;
  &lt;endpoint&gt;soap://D.com/some/endpoint&lt;/endpoint&gt;
&lt;/fault&gt;

</pre></div></div></div></div><h4 class="dtH1"><a name="ws-routing_n05214"></a>5.2.1.4 711 Endpoint Gone</h4><p>An endpoint in the message path is known to not exist anymore and no alternative endpoint is known. This fault code is appropriate if the WS-Routing receiver knows that the endpoint used to exist but has been permanently removed. The fault code is also appropriate if the implicit message path indicated by an empty "via" element is no longer available, for example because the underlying communication channel has ceased to exist. The endpoint can either be an intermediary identified by a "via" element or it can be the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> identified by the "to" element. The WS-Routing receiver MUST indicate the endpoint in question in the "endpoint" fault sub-element.</p><h4 class="dtH1"><a name="ws-routing_n05215"></a>5.2.1.5 712 Endpoint Not Supported</h4><p>An endpoint in the message path is not supported by the WS-Routing receiver. This fault code is appropriate if the URI contains a URI scheme that the WS-Routing receiver does not support or if the URI points to a part of the URI space that the WS-Routing receiver does not service. The endpoint can either be an intermediary identified by a "via" element or it can be the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> identified by the "to" element. The WS-Routing receiver MUST indicate the endpoint in question in the "endpoint" fault sub-element.</p><h4 class="dtH1"><a name="ws-routing_n05216"></a>5.2.1.6 713 Endpoint Invalid</h4><p>An endpoint in the message path does either not follow the URI syntax defined by <a href="http://www.normos.org/ietf/rfc/rfc2396.txt">RFC 2396</a> for absolute URIs, is not an absolute URI, or contains a fragment identifier (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0530">section 5.3</a>). The endpoint can either be an intermediary identified by a "via" element or it can be the ultimate WS-Routing receiver identified by the "to" element. The WS-Routing receiver MUST indicate the endpoint in question in the "endpoint" fault sub-element. The message SHOULD NOT be retried without modifications.</p><h4 class="dtH1"><a name="ws-routing_n05217"></a>5.2.1.7 720 Alternative Endpoint Found</h4><p>One or more alternative endpoints were found for the requested service. This fault code is appropriate if the WS-Routing receiver knows that the service is available using any of the alternative endpoints rather than the endpoint indicated in the received message. This is analogous to an HTTP redirection.</p><p>The endpoint for which alternative endpoints were found can either be an intermediary identified by a "via" element or it can be the ultimate WS-Routing receiver identified by the "to" element. The WS-Routing receiver MUST indicate the endpoint for which one or more alternative endpoints were found in the "endpoint" fault sub-element as well as provide the alternative endpoint or endpoints within the "found" fault sub-element.</p><p>An example of a 720 WS-Routing fault element (XML Namespace prefix left out for illustrative reasons)</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet15"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode15');">Copy</a></div></div><div id="CodeSnippetContainerCode15" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;fault&gt;
  &lt;code&gt;720&lt;/code&gt;
  &lt;reason&gt;Endpoint Moved&lt;/reason&gt;
  &lt;endpoint&gt;soap://D.com/some/endpoint&lt;/endpoint&gt;
  &lt;found&gt;
    &lt;at&gt;soap://D.com/new/endpoint&lt;/at&gt;
    &lt;at&gt;soap://mirror.D.com/new/endpoint&lt;/at&gt;
  &lt;/found&gt;
&lt;/fault&gt;

</pre></div></div></div></div><h4 class="dtH1"><a name="ws-routing_n05218"></a>5.2.1.8 730 Endpoint Too Long</h4><p>The URI used to identify the endpoint is longer than the WS-Routing receiver can handle (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0530">section 5.3</a>). This fault code is appropriate if the size of a URI identifying an endpoint in the WS-Routing header prevents the WS-Routing receiver from interpreting the WS-Routing message. Because of the problem in handling the size of the URI, the endpoint is NOT included in any WS-Routing fault message. The WS-Routing receiver MAY indicate the maximum acceptable size in number of octets using the "maxsize" fault sub-element as illustrated below:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet16"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode16');">Copy</a></div></div><div id="CodeSnippetContainerCode16" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;fault&gt;
  &lt;code&gt;730&lt;/code&gt;
  &lt;reason&gt;Endpoint Too Long&lt;/reason&gt;
  &lt;maxsize&gt;8192&lt;/maxsize&gt;
&lt;/fault&gt;

</pre></div></div></div></div><h4 class="dtH1"><a name="ws-routing_n05219"></a>5.2.1.9 731 Message Too Large</h4><p>The size of the overall WS-Routing message prevents the WS-Routing receiver from interpreting the message. There is no suggested size that a WS-Routing receiver must be able to handle as it may depend on the underlying protocol used (see for example <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0720">section 7.3</a>). The WS-Routing receiver MAY indicate the maximum acceptable size in number of octets using the "maxsize" fault sub-element.</p><h4 class="dtH1"><a name="ws-routing_n052110"></a>5.2.1.10 740 Message Timeout</h4><p>The WS-Routing sender did not complete the exchange of the WS-Routing message within the time that the WS-Routing receiver was prepared to wait (see also <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0540">section 5.4</a>). Upon receipt of this fault code the WS-Routing sender MUST immediately cease transferring the message. The WS-Routing sender MAY repeat the request without modifications at a later time. The WS-Routing receiver MAY indicate the maximum acceptable amount of time in number of seconds in the "maxtime" fault sub-element as illustrated below:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet17"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode17');">Copy</a></div></div><div id="CodeSnippetContainerCode17" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;fault&gt;
  &lt;code&gt;740&lt;/code&gt;
  &lt;reason&gt;Message Timeout&lt;/reason&gt;
  &lt;maxtime&gt;1500&lt;/maxtime&gt;
&lt;/fault&gt;

</pre></div></div></div></div><h4 class="dtH1"><a name="ws-routing_n052111"></a>5.2.1.11 750 Message Loop Detected</h4><p>A WS-Routing receiver has detected a message loop. The WS-Routing receiver MUST indicate the next endpoint in the message path in the "endpoint" fault sub-element. The message SHOULD NOT be retried without modifications.</p><h4 class="dtH1"><a name="ws-routing_n052112"></a>5.2.1.12 751 Reverse Path Unavailable</h4><p>A message with a reverse path (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0430">section 4.3</a>) was received by a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> but no reverse message path can be established between the intermediary and the next WS-Routing receiver. This fault code is appropriate if a reverse path is present in the message but the intermediary cannot forward the message in a manner that either explicitly or implicitly defines a reverse message path. Rather than forwarding the message, the intermediary MUST generate a fault to be returned to the initial sender via the reverse path.</p><h4 class="dtH1"><a name="ws-routing_n0522"></a>5.2.2 WS-Routing Receiver Faults</h4><p>The WS-Routing receiver failed to fulfill an apparently valid WS-Routing header because of a fault situation not directly attributable to the received message. Unless explicitly stated, no information is given to whether the fault situation is permanent or temporary.</p><h4 class="dtH1"><a name="ws-routing_n05221"></a>5.2.2.1 800 Unknown WS-Routing Fault</h4><p>The WS-Routing receiver encountered an unexpected condition that prevented it from handling the received message. The 800 fault code is special in that a recipient of a WS-Routing fault message SHOULD treat unknown 8xx fault codes as 800 (Unknown WS-Routing Fault).</p><h4 class="dtH1"><a name="ws-routing_n05222"></a>5.2.2.2 810 Element Not Implemented</h4><p>The WS-Routing header used an element defined in this specification not supported by the WS-Routing receiver. This fault code is only appropriate for elements defined by this specification. WS-Routing header elements not defined by this specification SHOULD be ignored by a WS-Routing receiver and MUST be forwarded by WS-Routing intermediaries.</p><h4 class="dtH1"><a name="ws-routing_n05223"></a>5.2.2.3 811 Service Unavailable</h4><p>The WS-Routing receiver is unable to handle the incoming WS-Routing message due to known internal problems or maintenance of the receiver. An example of an internal problem can be a service internal to the WS-Routing receiver that is not responding.</p><p>If a time is known for when the WS-Routing receiver is expected to be able to service the incoming message, the receiver MAY indicate the amount of time in number of seconds in the "retryAfter" fault sub-element as illustrated below:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet18"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode18');">Copy</a></div></div><div id="CodeSnippetContainerCode18" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;fault&gt;
  &lt;code&gt;811&lt;/code&gt;
  &lt;reason&gt;Service Unavailable&lt;/reason&gt;
  &lt;retryAfter&gt;1100&lt;/retryAfter&gt;
&lt;/fault&gt;

</pre></div></div></div></div><p>The WS-Routing sender MAY resend the message after the time interval indicated in the "retryAfter" sub-element has passed. If no value is given, no statement is made as to whether the situation is temporary or not. In that case, the WS-Routing sender SHOULD NOT resend the message until at least 5 minutes has passed.</p><h4 class="dtH1"><a name="ws-routing_n05224"></a>5.2.2.4 812 Service Too Busy</h4><p>The WS-Routing receiver is too busy to handle the incoming WS-Routing message. If the WS-Routing receiver does not wish to indicate that it is too busy, it MAY use an 811 "Service Unavailable" fault code instead, or it MAY completely refuse to read the incoming message off the network.</p><p>If a time is known for when the WS-Routing receiver is expected to be less busy, the WS-Routing receiver MAY indicate the amount of time in number of seconds in the "retryAfter" fault sub-element. If no "retryAfter" value is given, the WS-Routing sender SHOULD NOT resend the message until at least 5 minutes has passed.</p><h4 class="dtH1"><a name="ws-routing_n05225"></a>5.2.2.5 820 Endpoint Not Reachable</h4><p>An endpoint in the message path is not reachable. This fault code is appropriate if the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> cannot determine a network route to the endpoint. The endpoint can either be an intermediary identified by a "via" element or it can be the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> identified by the "to" element. The <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> MUST indicate the endpoint in question in the "endpoint" fault sub-element.</p><h3 class="dtH1"><a name="ws-routing_n0530"></a>5.3 Use of URIs in WS-Routing</h3><p>WS-Routing uses URIs for all identifies without exceptions. To WS-Routing, a URI is simply a formatted string that identifies—via name, location, or any other characteristic—a resource on the Web.</p><p>Whereas <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0510">section 5.1</a> defined the elements carrying URIs as values, this section defines the rules and conventions governing the URIs as values.</p><p>The use of IP addresses in URIs SHOULD be avoided whenever possible (see <a href="http://www.normos.org/ietf/rfc/rfc1900.txt">RFC 1900</a>). However, when used, the literal format for IPv6 addresses in URIs as described by RFC 2732 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2732">17</a>] SHOULD be supported.</p><p>All URIs used in WS-Routing MUST be absolute and MUST NOT include a fragment identifier. A WS-Routing receiver receiving a message containing a relative URI or a URI with a fragment MUST generate a 713 "Endpoint Invalid" fault (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</p><p>If a URI used to identify a WS-Routing endpoint in the WS-Routing header is used as a value in a SOAP "actor" header attribute, then the endpoint MUST appropriately deal with the actor attribute as defined by the SOAP/1.1 specification (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_soap">15</a>] section 4.2.2).</p><p>WS-Routing does not define any equivalence rules for URIs in general as these are defined by the individual URI schemes and by <a href="http://www.normos.org/ietf/rfc/rfc2396.txt">RFC 2396</a> (see section <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0600">6.0</a>). However, because of inconsistencies with respect to URI equivalence rules in many current URI parsers, it is STRONGLY RECOMMENDED that WS-Routing senders do not rely on any equivalence rules in WS-Routing receivers in order to determine equivalence between URI values used in a WS-Routing message.</p><p>WS-Routing does not place any a priori limit on the length of a URI. Any WS-Routing receiver MUST be able to handle the length of any URI that it publishes and both WS-Routing senders and WS-Routing receivers SHOULD be able to deal with URIs of at least 8k in length. A WS-Routing receiver SHOULD generate a 730 "Endpoint Too Long" fault if a URI is longer than the receiver can handle (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>).</p><h3 class="dtH1"><a name="ws-routing_n0540"></a>5.4 Timeouts</h3><p>Other than for WS-Routing fault messages, WS-Routing does not provide a mechanism for indicating in a WS-Routing message how long a WS-Routing sender is willing to maintain a reverse path. It is expected that other SOAP-based protocols will provide guaranteed delivery along with retransmission policies.</p><p>WS-Routing senders and receivers MUST implement a default set of timeouts and MUST use the WS-Routing fault codes for dealing with timeouts when they occur (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0520">section 5.2</a>). WS-Routing timeouts SHOULD be on a per single message basis rather than on a per message flow basis.</p><p>It is STRONGLY RECOMMENDED that WS-Routing receivers use the following default values for timeouts:

</p><dl><dt>Message exchange initiation: 2 minutes </dt><dd>This is while awaiting the first chunk of a message. </dd><dt>Subsequent message: 2 minutes </dt><dd>This is while awaiting each subsequent chunk of the message. </dd></dl><p>The timeouts SHOULD be reset after the completion of a single message. A WS-Routing receiver SHOULD NOT have a timeout for the overall completion of a message as this may severely affect the exchange of large messages.</p><h2 class="dtH1"><a name="ws-routing_n0600"></a>6. The soap: URI Scheme</h2><blockquote class="dtBlock"><b class="le">Editor Note</b>&nbsp;&nbsp;&nbsp;This is a preliminary description of the soap: URI scheme. The scheme has not been registered according to the IETF rules for new URI schemes. It may change as part of the registration process.</blockquote><p>The "soap:" URI scheme identifies a hierarchical URI namespace that can be used to identify resources on the Web. The default protocol used for retrieving "soap:" URIs is WS-Routing. Other protocols may be possible although this specification does not describe such protocols.</p><p>This section defines the scheme-specific syntax and semantics for "soap:" URIs.</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet19"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode19');">Copy</a></div></div><div id="CodeSnippetContainerCode19" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>soap_URI = "soap:" "//" host [ ":" port ] [ abs_path [ ";" up ] [ "?" query ]]
up = "up" "=" ( "tcp" | "udp" )

</pre></div></div></div></div><p>The "port", "abs_path", and "query" parameters are defined by RFC 2396 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2396">4</a>]. The "host" parameter is defined by RFC 2732 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2732">17</a>] in order to support literal IPv6 addresses (see also <a href="http://www.normos.org/ietf/rfc/rfc1900.txt">RFC 1900</a> for use of literal IP addresses in URIs).</p><p>The "up" (underlying protocol) parameter MUST NOT include any LWS. If no "up" parameter is given, TCP is assumed (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0700">section 7</a>). If the port is empty or not provided, port XX is assumed.</p><p>Examples of "soap:" URIs:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet20"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode20');">Copy</a></div></div><div id="CodeSnippetContainerCode20" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>soap://w3.org/2001/02/registration
soap://oneway.org/news/update;up=udp
soap://stock.org/stock/ticker?symbol=msft
soap://oneway.org/finance/stock/ticker;up=udp?symbol=msft

</pre></div></div></div></div><h3 class="dtH1"><a name="ws-routing_n0610"></a>6.1 Equivalence Rules</h3><p>The "soap:" URI scheme follows strictly the syntax and equivalence rules defined by RFC 2396 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2396">4</a>] with the following clarifications:

</p><ul type="disc"><li>The "soap:" scheme name is case <i>insensitive</i></li><li>The "host" value is case <i>insensitive</i></li><li>A "soap:" URI using an explicit port number where the port number is XX is equivalent to an "soap:" URI without an explicit port number</li><li>An empty "abs_path" value is equivalent to an "abs_path" value of "/"</li><li>Characters other than those in the "reserved" and "unsafe" sets (see RFC 2396 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2396">4</a>]) are equivalent to their ""%" HEX HEX" encoding</li></ul><p>The "up" parameter is always ignored when considering equivalence between soap: URIs. For example, the following three soap: URIs are equivalent in the sense that they refer to the same resource:</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet21"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode21');">Copy</a></div></div><div id="CodeSnippetContainerCode21" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>soap://some.org/foo
soap://some.org/foo;up=udp
soap://some.org/foo;up=tcp

</pre></div></div></div></div><h2 class="dtH1"><a name="ws-routing_n0700"></a>7. WS-Routing Underlying Protocol Bindings</h2><p>WS-Routing provides bindings for TCP, UDP, and HTTP as underlying protocols but other bindings are possible. WS-Routing does not define retransmission policies in order to compensate for the different level of service provided by the various underlying protocols. This is expected to be defined by other SOAP-based protocols.</p><h3 class="dtH1"><a name="ws-routing_n0750"></a>7.1 WS-Routing and DIME</h3><p>Both the TCP binding and the UDP binding requires DIME [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_dime">18</a>] as the encapsulation mechanism for WS-Routing messages. DIME MAY be used for the HTTP protocol binding but this is not a requirement.</p><p>DIME is a lightweight, binary encapsulation format that can be used to encapsulate multiple application defined entities or payloads of arbitrary type and size into a single message construct. It provides the functionality needed for carrying non-XML data along with WS-Routing messages as well as provides an efficient mechanism for determining the boundaries between WS-Routing messages.</p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet22"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode22');">Copy</a></div></div><div id="CodeSnippetContainerCode22" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>&lt;-------------------- DIME message -----------------&gt;
+------------+  +--------------+     +--------------+ 
| WS-Routing |  | Attachment 1 | ... | Attachment n |
+------------+  +--------------+     +--------------+

</pre></div></div></div></div><blockquote class="dtBlock"><b><a name="ws-routing_fig3"></a><b class="le">Figure 3</b></b>&nbsp;&nbsp;&nbsp;Example of a WS-Routing message encapsulated in DIME. The message moves in the direction from right to left. The first DIME record is a WS-Routing message and the remaining records can be used for carrying attachments. If there are no attachments then the WS-Routing message is the only record in the DIME message.</blockquote><p>The binding between WS-Routing and DIME is defined as follows:

</p><ul type="disc"><li>The first DIME record in a DIME message MUST be a WS-Routing message. The DIME payload identifier of the first WS-Routing message MUST be the <b>next</b> WS-Routing receiver in the WS-Routing message path.</li><li>Any subsequent records in a DIME message MUST be treated as attachments. DIME payload identifiers can be used to refer to each attachment from within the WS-Routing message or between attachments.</li><li>The DIME payload type (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_dime">18</a>] section 4.2.2) for a WS-Routing message is the absolute URI "http://www.xmlsoap.org/rp".</li></ul><blockquote class="dtBlock"><b class="le">Table 1</b>&nbsp;&nbsp;&nbsp;Example of what the DIME message would look for the WS-Routing message illustrated in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_c0030">Example 3</a> without attachments and without chunking the WS-Routing message over multiple DIME records.</blockquote><div class="tablediv"><table class="dtTABLE"><tbody><tr valign="top"><th width="50%">DIME Field</th><th width="50%">DIME Field Value</th></tr><tr valign="top"><td width="50%">MB</td><td width="50%">1</td></tr><tr valign="top"><td width="50%">ME</td><td width="50%">1</td></tr><tr valign="top"><td width="50%">CF</td><td width="50%">0</td></tr><tr valign="top"><td width="50%">TNF</td><td width="50%">2</td></tr><tr valign="top"><td width="50%">TYPE</td><td width="50%">http://schemas.xmlsoap.org/rp/</td></tr><tr valign="top"><td width="50%">ID</td><td width="50%">soap://C.com</td></tr><tr valign="top"><td width="50%">DATA</td><td width="50%">&lt;S:Envelope...</td></tr></tbody></table></div><h3 class="dtH1"><a name="ws-routing_n0710"></a>7.2 TCP</h3><blockquote class="dtBlock"><b class="le">Editor Note</b>&nbsp;&nbsp;&nbsp;The TCP binding described in this section is preliminary and is likely to change before requesting a well-known port from IANA.</blockquote><p>WS-Routing over TCP MUST use DIME as the encapsulation mechanism (see section 7.2). The implicit reverse message path defined for TCP is the source address of the peer at the other end of the TCP connection independent of who initiated the connection.</p><p>The following rules apply independently of who initiated the TCP connection:

</p><ul type="disc"><li>Any WS-Routing message can be sent in either direction on a single TCP connection independent of whether it is a reply, a fault, or any other message.</li><li>There is no ordering requirement between WS-Routing messages allowing messages and replies to be sent out of order in either direction</li><li>WS-Routing messages can be sent back-to-back allowing multiple messages to be exchanged in serial along both message paths at any given time</li></ul><p>By using explicit "via" element values in the reverse path, messages traveling along the reverse path do not have to be sent on the same TCP connection as the forward path messages.</p><h4 class="dtH1"><a name="ws-routing_n0711"></a>7.2.1 TCP Connection Management</h4><p>Implementations SHOULD reuse existing TCP connections wherever possible. It is STRONGLY RECOMMENDED that WS-Routing uses a timeout based mechanism for determining when an idle TCP connection should be closed and that the default timeout for an idle TCP connection is 2 minutes (see also <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0540">section 5.4</a>).</p><p>When a WS-Routing sender or receiver wishes to time out a TCP connection it SHOULD issue a graceful close on the outgoing connection and allow the incoming connection to drain. In many TCP socket APIs this can be done using a <i>shutdown</i> system call. WS-Routing senders and receivers SHOULD both watch for the other side of the TCP connection close the connection, and respond to it as appropriate.</p><p>If a TCP connection is closed and there are outstanding messages that were to be sent on the implicit reverse path, then these messages SHOULD be discarded.</p><p>WS-Routing senders SHOULD limit the number of simultaneous connections that they maintain to a given WS-Routing receiver. An <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g340">initial WS-Routing sender</a> SHOULD NOT maintain more than 2 TCP connections with any WS-Routing receiver. A <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a> MAY use up to 2*N TCP connections with any WS-Routing receiver, where N is the number of WS-Routing senders using that intermediary.</p><p>WS-Routing intermediaries MAY reuse the same TCP connection for forwarding WS-Routing messages even though these messages may have arrived on different TCP connections. There is no requirement that there be a 1:1 mapping of incoming and outgoing TCP connections. An example of how a TCP connection may be reused is illustrated in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig3">Figure 3:</a></p><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet23"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode23');">Copy</a></div></div><div id="CodeSnippetContainerCode23" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>+------------+         +------------+         +------------+
| WS-Routing |&lt;---1---&gt;| WS-Routing |         | WS-Routing |
|   Sender   |&lt;---2---&gt;|Intermediary|&lt;-1,2,3-&gt;|  Receiver  | 
|            |&lt;---3---&gt;|            |         |            |
+------------+         +------------+         +------------+

</pre></div></div></div></div><blockquote class="dtBlock"><b class="le">Figure 3</b>&nbsp;&nbsp;&nbsp;An example of possible mapping between TCP connections in a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a></blockquote><h3 class="dtH1"><a name="ws-routing_n0720"></a>7.3 UDP</h3><blockquote class="dtBlock"><b class="le">Editor Note</b>&nbsp;&nbsp;&nbsp;The UDP binding described in this section is preliminary and is likely to change before requesting a well-known port from IANA.</blockquote><p>WS-Routing over UDP MUST use DIME as the encapsulation mechanism (see section 7.2). There is no implicit reverse message path defined for UDP. This means that if a reverse path is requested then it MUST be explicitly indicated using a non-empty "via" element in the "rev" element (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0430">section 4.3</a>).</p><p>WS-Routing uses the same rule of thumb as SIP [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc2376">5</a>], which means that UDP datagrams, including all headers, SHOULD NOT be larger than the path maximum transmission unit (MTU) if the MTU is known, or 1500 bytes if the MTU is unknown. Furthermore, SIP provides the following recommendation, which also applies to WS-Routing:</p><blockquote class="dtBlock">
The 1500 bytes accommodates encapsulation within the "typical" ethernet MTU without IP fragmentation. Recent studies [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_l1920">12</a>] indicate that an MTU of 1500 bytes is a reasonable assumption. The next lower common MTU values are 1006 bytes for SLIP and 296 for low-delay PPP (RFC 1191 [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_rfc20261">1</a>]). Thus, another reasonable value would be a message size of 950 bytes, to accommodate packet headers within the SLIP MTU without fragmentation.</blockquote><p>WS-Routing does not define any reliability or retransmission policies for UDP, as these are expected to be specified by other SOAP reliable messaging mechanisms.</p><h3 class="dtH1"><a name="ws-routing_n0730"></a>7.4 HTTP</h3><p>As mentioned in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0340">section 3.4</a>, it is possible to carry WS-Routing messages using a variety of underlying protocols. Although HTTP is not a transport like TCP and UDP, it supports the notion of carrying a SOAP message within the framework of HTTP and can act as the underlying protocol for a part of the WS-Routing message path. The SOAP specification (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_soap">15</a>] section 6) defines the rules for carrying a SOAP message within an HTTP message. These rules apply equally to WS-Routing but in addition, this section defines a set of rules that specifically applies to carrying WS-Routing messages within HTTP.</p><p>When a WS-Routing message is carried within an HTTP message there is no mechanism for guaranteeing that there is a WS-Routing receiver at the destination of the HTTP message. In order to ensure that a SOAP processor honors the WS-Routing semantics, a WS-Routing sender sending a WS-Routing message using HTTP SHOULD mark the WS-Routing header with a SOAP mustUnderstand attribute with a value of "1" (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_soap">15</a>] section 4.2.3) and a SOAP actor attribute with a value of "http://schemas.xmlsoap.org/soap/actor/next" (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_soap">15</a>] section 4.2.2)</p><h4 class="dtH1"><a name="ws-routing_n0731"></a>7.4.1 HTTP Request</h4><p>When generating an HTTP request message there are two values that are mapped from the WS-Routing message into the HTTP message: the Request-URI and the SOAPAction header field (see [<a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_soap">15</a>] section 6.1.1). A WS-Routing sender generating an HTTP message MUST use the following mappings between the WS-Routing header and the HTTP header:

</p><dl><dt>Request-URI </dt><dd>The value of the Request-URI SHOULD be the value of the next WS-Routing receiver in the message path regardless of whether it is the <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g130">ultimate WS-Routing receiver</a> or a <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a>. That is, if the next WS-Routing receiver is specified by a "via" element in the forward message path, then the value of the Request-URI is same as the value of that "via" element. If the next receiver is specified by the "to" element then the value of the Request-URI is the same as the value of the "to" element (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0440">section 4.4</a>). </dd><dt>SOAPAction Header field </dt><dd>The value of the SOAPAction header MUST be the same as the value of the "action" element (see <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0511">section 5.1.1</a>). </dd></dl><p>A WS-Routing message included in an HTTP request message MAY contain a reverse path. The implicit reverse path (indicated by an empty "via" element) for a WS-Routing message included in an HTTP request is the corresponding HTTP response message. Note that as WS-Routing doesn't define a request/response message path pattern, it is up to the application to define whether the implicit reverse path is to be used. The rules for dealing with a reverse path in an HTTP response is described in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_n0732">section 7.2.2</a>.</p><p>Below is an example of a WS-Routing message included in an HTTP request. The example shows how HTTP can be a part of the overall WS-Routing message path and illustrates the WS-Routing message being sent from <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_g140">WS-Routing intermediary</a><b>B</b> to intermediary <b>C</b> in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">Figure 1</a>. In the example, <b>C</b> is identified by a URI of form "http://..." although this doesn't have to be the case.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0110"></a><b class="le">Example 11</b></b>&nbsp;&nbsp;&nbsp;Message leaving <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary B</a> in forward direction towards <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">C</a> using HTTP</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet24"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode24');">Copy</a></div></div><div id="CodeSnippetContainerCode24" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>POST /endpoint/on/http/server HTTP/1.1
Host: C.com
Content-Type: text/xml; charset="utf-8"
Content-Length: nnnn
SOAPAction: "http://www.im.org/chat"

&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"
       S:mustUnderstand="1" S:actor="http://schemas.xmlsoap.org/soap/actor/next"&gt;
         &lt;m:action&gt;http://www.im.org/chat&lt;/m:action&gt;
         &lt;m:to&gt;soap://D.com/some/endpoint&lt;/m:to&gt;
         &lt;m:fwd&gt;
            &lt;m:via&gt;http://C.com/endpoint/on/http/server&lt;/m:via&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via/&gt;
            &lt;m:via m:vid="cid:122326@B.com"/&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:henrikn@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:id&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><h4 class="dtH1"><a name="ws-routing_n0732"></a>7.4.2 HTTP Response</h4><p>Any WS-Routing message can be carried within an HTTP response message. There is no mapping between any HTTP header fields in an HTTP response and the values of the WS-Routing header like there is for a WS-Routing message in an HTTP request message.</p><p>A WS-Routing message included in an HTTP response message MAY contain a reverse path. There is no implicit reverse path (indicated by an empty "via" element) defined for a WS-Routing message included in an HTTP response so the "via" element describing the reverse path MUST be explicit.</p><p>These are the rules for choosing the appropriate HTTP status code for an HTTP response that is generated in response to an HTTP request message containing a WS-Routing message:

</p><ul type="disc"><li>If an <i>implicit</i> reverse path is present in the WS-Routing message in the HTTP request and the request is successfully fulfilled but no WS-Routing message is to be sent along the reverse path then a 204 (No Content) or a 200 (Ok) status code is the appropriate HTTP status code to use.</li><li>If an <i>explicit</i> reverse path is present in the WS-Routing message in the HTTP request and the request is successfully fulfilled then a 204 (No Content) or a 200 (Ok) status code is the appropriate HTTP status code to use.</li><li>If <i>no</i> reverse path is present and the request is successfully fulfilled then a 204 (No Content) or a 200 (Ok) status code is the appropriate HTTP status code to use.</li><li>In either of the three cases above, if the HTTP request has been accepted but not processed then a 202 (Accepted) HTTP status code is the appropriate code to use.</li><li>As for all SOAP fault messages carried in an HTTP response message, a 500 (Internal Server Error) is the appropriate HTTP status code to use.</li></ul><p>Below is an example of an HTTP response message carrying a message from WS-Routing intermediary <b>C</b> to intermediary <b>B</b> in <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">Figure 1</a>. Note the non-empty "via" element indicating that the explicit reverse path for the message. The reverse path is explicit because the HTTP binding doesn't define an implicit reverse path.</p><blockquote class="dtBlock"><b><a name="ws-routing_c0120"></a><b class="le">Example 12</b></b>&nbsp;&nbsp;&nbsp;Message leaving <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">intermediary C</a> in reverse direction towards <a href="http://msdn.microsoft.com/en-us/library/ms951249#ws-routing_fig1">B</a> using HTTP</blockquote><div class="LW_CodeSnippetContainer" xmlns=""><a name="CodeSpippet25"></a><div class="LW_CodeSnippetContainerCodeCollection"><div class="LW_CodeSnippetToolBar"><div class="LW_CodeSnippetToolBarText" style="valign: top"><a title="Copy to clipboard." href="javascript:CodeSnippet_CopyCode('CodeSnippetContainerCode25');">Copy</a></div></div><div id="CodeSnippetContainerCode25" class="LW_CodeSnippetContainerCode"><div style="color:Black;"><pre>HTTP/1.1 200 Ok
Content-Type: text/xml; charset="utf-8"
Content-Length: nnnn

&lt;S:Envelope
   xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&gt;
   &lt;S:Header&gt;
      &lt;m:path xmlns:m="http://schemas.xmlsoap.org/rp/"
       S:mustUnderstand="1" S:actor="http://schemas.xmlsoap.org/soap/actor/next"&gt;
         &lt;m:action&gt;http://www.im.org/update&lt;/m:action&gt;
         &lt;m:fwd&gt;
            &lt;m:via/&gt;
            &lt;m:via m:vid="cid:122326@B.com"/&gt;
         &lt;/m:fwd&gt;
         &lt;m:rev&gt;
            &lt;m:via&gt;http://C.com/endpoint/on/http/server&lt;/m:via&gt;
            &lt;m:via&gt;soap://D.com/some/endpoint&lt;/m:via&gt;
         &lt;/m:rev&gt;
         &lt;m:from&gt;mailto:satisht@microsoft.com&lt;/m:from&gt;
         &lt;m:id&gt;uuid:9fshs8fj-sffg-r5ts-adfg-9kd84jd9mjdld43&lt;/m:id&gt;
         &lt;m:relatesTo&gt;uuid:84b9f5d0-33fb-4a81-b02b-5b760641c1d6&lt;/m:relatesTo&gt;
      &lt;/m:path&gt;
   &lt;/S:Header&gt;
   &lt;S:Body&gt;
      ...
   &lt;/S:Body&gt;
&lt;/S:Envelope&gt;

</pre></div></div></div></div><h2 class="dtH1"><a name="ws-routing_n0800"></a>8. Acknowledgements</h2><p>TBD</p><h2 class="dtH1"><a name="ws-routing_n0900"></a>9. References</h2><p><b>[1]</b> Mogul, J. and S. Deering, "Path MTU Discovery", <a name="ws-routing_rfc20261"></a><a href="http://www.normos.org/ietf/rfc/rfc1191.txt">RFC1191</a>, November 1990.</p><p><b>[2]</b> S. Bradner, "The Internet Standards Process -- Revision 3", <a name="ws-routing_rfc2026"></a><a href="http://www.normos.org/ietf/rfc/rfc2026.txt">RFC2026</a>, Harvard University, October 1996</p><p><b>[3]</b> S. Bradner, "Key words for use in RFCs to Indicate Requirement Levels", <a name="ws-routing_rfc2119"></a><a href="http://www.normos.org/ietf/rfc/rfc2119.txt">RFC 2119</a>, Harvard University, March 1997</p><p><b>[4]</b> T. Berners-Lee, R. Fielding, L. Masinter, "Uniform Resource Identifiers (URI): Generic Syntax", <a name="ws-routing_rfc2396"></a><a href="http://www.normos.org/ietf/rfc/rfc2396.txt">RFC 2396</a>, MIT/LCS, U.C. Irvine, Xerox Corporation, August 1998.</p><p><b>[5]</b> M. Handley, H. Schulzrinne, E. Schooler, J. Rosenberg, "SIP: Session Initiation Protocol", <a name="ws-routing_rfc2376"></a><a href="http://www.normos.org/ietf/rfc/rfc2543.txt">RFC2543</a>, ACIRI, Columbia U., Cal Tech, Bell Labs, March 1999</p><p><b>[6]</b> R. Fielding, J. Gettys, J. C. Mogul, H. Frystyk, T. Berners-Lee, "Hypertext Transfer Protocol -- HTTP/1.1", <a name="ws-routing_rfc2616"></a><a href="http://www.normos.org/ietf/rfc/rfc2616.txt">RFC 2616</a>, U.C. Irvine, DEC W3C/MIT, DEC, W3C/MIT, W3C/MIT, January 1997</p><p><b>[7]</b> W3C Recommendation "<a name="ws-routing_xml"></a><a href="http://www.w3.org/TR/REC-xml">The XML Specification</a>"</p><p><b>[8]</b> W3C Recommendation "<a name="ws-routing_xmlns"></a><a href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</a>"</p><p><b>[9]</b> W3C Proposed Recommendation "<a name="ws-routing_xmllink"></a><a href="http://www.w3.org/TR/xlink/">XML Linking Language</a>"</p><p><b>[10]</b> W3C Recommendation "<a name="ws-routing_xmls1"></a><a href="http://www.w3.org/TR/xmlschema-1/">XML Schema Part 1: Structures</a>"</p><p><b>[11]</b> W3C Recommendation "<a name="ws-routing_xmls2"></a><a href="http://www.w3.org/TR/xmlschema-2/">XML Schema Part 2: Datatypes</a>"</p><p><b>[12]</b> Stevens, W., "<a name="ws-routing_l1920"></a>TCP/IP illustrated: the protocols , vol. 1". Reading, Massachusetts: Addison-Wesley, 1994.</p><p><b>[13]</b> Rohit Khare, "<a name="ws-routing_rkar"></a><a href="http://webfuse.cqu.edu.au/Information/Resources/Web_Development/Papers/Composing_Active_Proxies/index.txt.html">Composing Active Proxies to Extend the Web</a>"</p><p><b>[14]</b> H. F. Nielsen, P. Leach, S. Lawrence, "An HTTP Extension Framework", <a name="ws-routing_rfc2774"></a><a href="http://www.normos.org/ietf/rfc/rfc2774.txt">RFC 2774</a>, Microsoft, Agranat Systems, Feb 2000</p><p><b>[15]</b> W3C Note "<a name="ws-routing_soap"></a><a href="http://www.w3.org/TR/SOAP/">Simple Object Access Protocol (SOAP) 1.1</a>"</p><p><b>[16]</b> W3C Note "<a name="ws-routing_soap-attachments"></a><a href="http://www.w3.org/TR/SOAP-attachments">SOAP Messages with Attachments</a>"</p><p><b>[17]</b> R. Hinden, B. Carpenter, L. Masinter, "Format for Literal IPv6 Addresses in URL's", <a name="ws-routing_rfc2732"></a><a href="http://www.normos.org/ietf/rfc/rfc2732.txt">RFC 2732</a>, Nokia, IBM, AT&amp;T, December 1999</p><p><b>[18]</b> H. Nielsen, H. Sanders, E. Christensen, "<a name="ws-routing_dime"></a><a href="http://gotdotnet.com/team/xml_wsspecs/dime/">DIME – Direct Internet Message Encapsulation</a>", Microsoft, May 2001</p></div></div></div></div></div><div class="footer"><div id="footer" class="footerContainer cl_footer_slice"><div class="footerLogoContainer"><div class="footerContent"><div class="copyright">
      © 2010 Microsoft Corporation. All rights reserved.</div><div class="footerLogo cl_footer_logo"></div><a href="http://msdn.microsoft.com/cc300389.aspx">Terms of Use</a><span class="pipe"> | </span><a href="http://www.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</a><span class="pipe"> | </span><a href="http://www.microsoft.com/info/privacy.mspx">Privacy Statement</a><span class="pipe">| </span><a onclick="javascript:ShowFeedbackDialog();" title="Feedback" class="FeedbackLink" href="http://msdn.microsoft.com/en-us/library/ms951249#footerLink">
      Feedback
        <span class="FeedbackButton clip20x21" id="FeedbackButton"><img class="cl_footer_feedback_icon" src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" alt="Feedback"></span></a><div id="FeedbackContainer" class="FeedbackContainer"><form method="post" action="http://msdn.microsoft.com/en-us/library/feedback/add/ms951249"><div class="FeedbackTitleContainer"><div class="FeedbackTitle">
            Feedback</div><div class="FeedbackCancel"><a href="javascript:;" onclick="document.getElementById(&#39;FeedbackContainer&#39;).style.display = &#39;none&#39;;">x</a></div></div><div class="FeedbackData"><div class="FeedbackInfoText">
            Tell us about your experience...
        </div><div class="QuestionText">
            Did the page load quickly?
        </div><div class="AnswerText"><span>
                Yes<span><input id="searchBox" name="searchBox" type="radio" value="1"></span></span><span>
                No<span><input id="searchBox" name="searchBox" type="radio" value="0"></span></span></div><div class="QuestionText">
            Do you like the page design?
        </div><div class="AnswerText"><span>
                Yes<span><input id="tabbedCode" name="tabbedCode" type="radio" value="1"></span></span><span>
                No<span><input id="tabbedCode" name="tabbedCode" type="radio" value="0"></span></span></div><div class="QuestionText">
            How useful is this topic?
        </div><div class="FeedbackGraphicHolder clip269x23"><img alt="" src="./Web Services Routing Protocol (WS-Routing)_files/0988b66c1e448ee567fca35fa16b4f24.png" class="cl_online_scale FeedbackSiderGraphic"></div><div class="RadioButtonHolder"><div class="RateRadioOne"><input id="topicUseful" name="topicUseful" title="Really disliked it" type="radio" value="1"></div><div class="RateRadio"><input id="topicUseful" name="topicUseful" title="Disliked it" type="radio" value="2"></div><div class="RateRadio"><input id="topicUseful" name="topicUseful" title="OK" type="radio" value="3"></div><div class="RateRadio"><input id="topicUseful" name="topicUseful" title="Good" type="radio" value="4"></div><div class="RateRadioLast"><input id="topicUseful" name="topicUseful" title="Really Good" type="radio" value="5"></div></div><div class="QuestionText">
            Tell us more
        </div><div class="FeedbackTextAreaContainer"><textarea name="feedbackText" cols="25" rows="5" class="FeedbackTextArea" onkeyup="LimitText(this, 4000);" onkeydown="LimitText(this, 4000);"></textarea><textarea id="feedbackDescription" name="feedbackDescription" cols="25" rows="10" style="display:none;" onkeyup="LimitText(this, 4000);" onkeydown="LimitText(this, 4000);">Enter description here.</textarea><input type="hidden" id="feedbackPriority" name="feedbackPriority" value=""><input type="hidden" id="feedbackSourceUrl" name="feedbackSourceUrl" value=""><input type="hidden" id="ClientIP" name="ClientIP" value=""><input type="hidden" id="ClientOS" name="ClientOS" value=""><input type="hidden" id="ClientBrowser" name="ClientBrowser" value=""><input type="hidden" id="ClientTime" name="ClientTime" value=""><input type="hidden" id="ClientTimeZone" name="ClientTimeZone" value=""></div><div><input type="submit" value="Send" class="FeedbackSubmit" onclick="document.getElementById(&#39;feedbackDescription&#39;).value=&#39;&#39;;document.getElementById(&#39;feedBackVersion&#39;).value = &#39;-1&#39;;"></div></div><input type="hidden" id="returnUrl" name="returnUrl" value="http://msdn.microsoft.com/en-us/library/ms951249"><input type="hidden" id="feedBackVersion" name="feedBackVersion" value="1"></form></div></div></div></div></div><div class="MetricsContainer"><div class="WebtrendsContainer"><script type="text/javascript" language="javascript">
//<![CDATA[
  var literalNormalizedUrl = '/en-us/library/ms951249(d=lightweight,l=en-us,v=MSDN.10).aspx';
  var wt_nvr_ru = 'WT_NVR_RU';
  var wt_fpcdom = '.microsoft.com';
  var wt_domlist = 'msdn.microsoft.com';
  var wt_pathlist = '';
  var wt_paramlist = 'DCSext.mtps_devcenter';
  var wt_siteid = 'MSDN';
  var gDomain = 'm.webtrends.com';
  var gDcsId = 'dcsmgru7m99k7mqmgrhudo0k8_8c6m';
  var gFpc = 'WT_FPC';
  if (document.cookie.indexOf(gFpc + "=") == -1) {
    document.write("<scr" + "ipt type='text/javascript' src='" + "http" + (window.location.protocol.indexOf('https:') == 0 ? 's' : '') + "://" + gDomain + "/" + gDcsId + "/wtid.js" + "'><\\/scr" + "ipt>");
  }
  var detectedLocale = 'en-us';
  var wtsp = 'msdnlib_hp';
  var gTrackEvents = '0';
/*]]>*/
</script><noscript></noscript></div><div class="OmnitureContainer"><script type="text/javascript">
  var omni_guid = '57eacf7e-48dc-4863-bf2e-06485851da1e'; 
</script><noscript></noscript></div><div class="WebMetrixContainer"><div class="MetricsContainer"><img alt="Page view tracker" src="./Web Services Routing Protocol (WS-Routing)_files/trans_pixel.asp" width="0" height="0" border="0"></div></div></div><script language="javascript" type="text/javascript" src="./Web Services Routing Protocol (WS-Routing)_files/broker.js"></script><script type="text/javascript" src="./Web Services Routing Protocol (WS-Routing)_files/b20574176f2d4b6028665a10d8a51cdc.js" xmlns="http://www.w3.org/1999/xhtml"></script><script src="./Web Services Routing Protocol (WS-Routing)_files/broker-config.js"></script></body></html>